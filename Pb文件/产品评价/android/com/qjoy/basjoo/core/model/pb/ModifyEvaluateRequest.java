// Code generated by Wire-Lite protocol buffer compiler, do not edit.
// Source file: ///home/admin/protobuf/src/beb0ea1a9a9dfe6ac607a5a5a74e8449/proto/Evaluate
package com.qjoy.basjoo.core.model.pb;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * 修改评价请求
 */
public final class ModifyEvaluateRequest extends Message {

  public static final int TAG_EVALUATEID = 1;
  public static final int TAG_CONTENT = 2;
  public static final int TAG_IMAGEURLS = 3;
  public static final int TAG_LEVEL = 4;

  public static final String DEFAULT_EVALUATEID = "";
  public static final String DEFAULT_CONTENT = "";
  public static final List<String> DEFAULT_IMAGEURLS = Collections.emptyList();
  public static final Integer DEFAULT_LEVEL = 0;

  /**
   * 评价Id
   */
  @ProtoField(tag = 1, type = STRING, label = REQUIRED)
  public String evaluateId;

  /**
   * 评价内容
   */
  @ProtoField(tag = 2, type = STRING, label = REQUIRED)
  public String content;

  /**
   * 图文参数地址（多图文）
   */
  @ProtoField(tag = 3, type = STRING, label = REPEATED)
  public List<String> imageUrls;

  /**
   * 评价等级: 1星，2星，...5星最高
   */
  @ProtoField(tag = 4, type = INT32, label = REQUIRED)
  public Integer level;

  public ModifyEvaluateRequest(ModifyEvaluateRequest message) {
    super(message);
    if (message == null) return;
    this.evaluateId = message.evaluateId;
    this.content = message.content;
    this.imageUrls = copyOf(message.imageUrls);
    this.level = message.level;
  }

  public ModifyEvaluateRequest() {
  }

  public ModifyEvaluateRequest fillTagValue(int tag, Object value) {
    switch(tag) {
        case TAG_EVALUATEID:
        this.evaluateId = (String)value;
        break;
        case TAG_CONTENT:
        this.content = (String)value;
        break;
        case TAG_IMAGEURLS:
        this.imageUrls = immutableCopyOf((List<String>)value);
        break;
        case TAG_LEVEL:
        this.level = (Integer)value;
        break;
        default: break;
        };
    return this;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ModifyEvaluateRequest)) return false;
    ModifyEvaluateRequest o = (ModifyEvaluateRequest) other;
    return equals(evaluateId, o.evaluateId)
        && equals(content, o.content)
        && equals(imageUrls, o.imageUrls)
        && equals(level, o.level);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = evaluateId != null ? evaluateId.hashCode() : 0;
      result = result * 37 + (content != null ? content.hashCode() : 0);
      result = result * 37 + (imageUrls != null ? imageUrls.hashCode() : 1);
      result = result * 37 + (level != null ? level.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }
}
