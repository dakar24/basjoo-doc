// Code generated by Wire-Lite protocol buffer compiler, do not edit.
// Source file: ///home/admin/protobuf/src/b034d5a3fa893e050c91234030ec228e/proto/Notify
package com.qjoy.basjoo.core.model.pb;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * 获取通知列表
 */
public final class GetNotifyLiteInfoListRequest extends Message {

  public static final int TAG_NOTIFYTYPE = 1;
  public static final int TAG_STARTINDEX = 2;

  public static final Integer DEFAULT_NOTIFYTYPE = 0;
  public static final Integer DEFAULT_STARTINDEX = 0;

  /**
   * 通知类型 0：订单通知,1:权益通知,2：评论通知,3:系统通知
   */
  @ProtoField(tag = 1, type = INT32, label = REQUIRED)
  public Integer notifyType;

  /**
   * 起始index
   */
  @ProtoField(tag = 2, type = INT32)
  public Integer startIndex;

  public GetNotifyLiteInfoListRequest(GetNotifyLiteInfoListRequest message) {
    super(message);
    if (message == null) return;
    this.notifyType = message.notifyType;
    this.startIndex = message.startIndex;
  }

  public GetNotifyLiteInfoListRequest() {
  }

  public GetNotifyLiteInfoListRequest fillTagValue(int tag, Object value) {
    switch(tag) {
        case TAG_NOTIFYTYPE:
        this.notifyType = (Integer)value;
        break;
        case TAG_STARTINDEX:
        this.startIndex = (Integer)value;
        break;
        default: break;
        };
    return this;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetNotifyLiteInfoListRequest)) return false;
    GetNotifyLiteInfoListRequest o = (GetNotifyLiteInfoListRequest) other;
    return equals(notifyType, o.notifyType)
        && equals(startIndex, o.startIndex);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = notifyType != null ? notifyType.hashCode() : 0;
      result = result * 37 + (startIndex != null ? startIndex.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }
}
