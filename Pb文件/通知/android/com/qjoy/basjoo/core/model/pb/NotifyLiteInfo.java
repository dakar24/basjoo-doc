// Code generated by Wire-Lite protocol buffer compiler, do not edit.
// Source file: ///home/admin/protobuf/src/b034d5a3fa893e050c91234030ec228e/proto/Notify
package com.qjoy.basjoo.core.model.pb;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * 通知概要信息
 */
public final class NotifyLiteInfo extends Message {

  public static final int TAG_NOTIFYID = 1;
  public static final int TAG_NOTIFYTIME = 2;
  public static final int TAG_NOTIFYTITLE = 3;
  public static final int TAG_NOTIFYDESC = 4;
  public static final int TAG_NOTIFYTYPE = 5;
  public static final int TAG_NOTIFYSUBTYPE = 6;
  public static final int TAG_NOTIFYIMGURL = 7;
  public static final int TAG_NOTIFYEXTINFO = 8;

  public static final String DEFAULT_NOTIFYID = "";
  public static final Long DEFAULT_NOTIFYTIME = 0L;
  public static final String DEFAULT_NOTIFYTITLE = "";
  public static final String DEFAULT_NOTIFYDESC = "";
  public static final Integer DEFAULT_NOTIFYTYPE = 0;
  public static final Integer DEFAULT_NOTIFYSUBTYPE = 0;
  public static final String DEFAULT_NOTIFYIMGURL = "";
  public static final List<NotifyExtInfo> DEFAULT_NOTIFYEXTINFO = Collections.emptyList();

  /**
   * ID
   */
  @ProtoField(tag = 1, type = STRING, label = REQUIRED)
  public String notifyId;

  /**
   * 通知时间
   */
  @ProtoField(tag = 2, type = INT64, label = REQUIRED)
  public Long notifyTime;

  /**
   * 通知标题
   */
  @ProtoField(tag = 3, type = STRING, label = REQUIRED)
  public String notifyTitle;

  /**
   * 通知描述
   */
  @ProtoField(tag = 4, type = STRING, label = REQUIRED)
  public String notifyDesc;

  /**
   * 通知类型
   */
  @ProtoField(tag = 5, type = INT32)
  public Integer notifyType;

  /**
   * 通知子类型 1,话题评论通知；2,产品评论通知
   */
  @ProtoField(tag = 6, type = INT32)
  public Integer notifySubType;

  /**
   * 通知的图片路径
   */
  @ProtoField(tag = 7, type = STRING)
  public String notifyImgUrl;

  /**
   * 扩展信息，产品ID，话题ID，订单ID等
   */
  @ProtoField(tag = 8, label = REPEATED)
  public List<NotifyExtInfo> notifyExtInfo;

  public NotifyLiteInfo(NotifyLiteInfo message) {
    super(message);
    if (message == null) return;
    this.notifyId = message.notifyId;
    this.notifyTime = message.notifyTime;
    this.notifyTitle = message.notifyTitle;
    this.notifyDesc = message.notifyDesc;
    this.notifyType = message.notifyType;
    this.notifySubType = message.notifySubType;
    this.notifyImgUrl = message.notifyImgUrl;
    this.notifyExtInfo = copyOf(message.notifyExtInfo);
  }

  public NotifyLiteInfo() {
  }

  public NotifyLiteInfo fillTagValue(int tag, Object value) {
    switch(tag) {
        case TAG_NOTIFYID:
        this.notifyId = (String)value;
        break;
        case TAG_NOTIFYTIME:
        this.notifyTime = (Long)value;
        break;
        case TAG_NOTIFYTITLE:
        this.notifyTitle = (String)value;
        break;
        case TAG_NOTIFYDESC:
        this.notifyDesc = (String)value;
        break;
        case TAG_NOTIFYTYPE:
        this.notifyType = (Integer)value;
        break;
        case TAG_NOTIFYSUBTYPE:
        this.notifySubType = (Integer)value;
        break;
        case TAG_NOTIFYIMGURL:
        this.notifyImgUrl = (String)value;
        break;
        case TAG_NOTIFYEXTINFO:
        this.notifyExtInfo = immutableCopyOf((List<NotifyExtInfo>)value);
        break;
        default: break;
        };
    return this;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof NotifyLiteInfo)) return false;
    NotifyLiteInfo o = (NotifyLiteInfo) other;
    return equals(notifyId, o.notifyId)
        && equals(notifyTime, o.notifyTime)
        && equals(notifyTitle, o.notifyTitle)
        && equals(notifyDesc, o.notifyDesc)
        && equals(notifyType, o.notifyType)
        && equals(notifySubType, o.notifySubType)
        && equals(notifyImgUrl, o.notifyImgUrl)
        && equals(notifyExtInfo, o.notifyExtInfo);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = notifyId != null ? notifyId.hashCode() : 0;
      result = result * 37 + (notifyTime != null ? notifyTime.hashCode() : 0);
      result = result * 37 + (notifyTitle != null ? notifyTitle.hashCode() : 0);
      result = result * 37 + (notifyDesc != null ? notifyDesc.hashCode() : 0);
      result = result * 37 + (notifyType != null ? notifyType.hashCode() : 0);
      result = result * 37 + (notifySubType != null ? notifySubType.hashCode() : 0);
      result = result * 37 + (notifyImgUrl != null ? notifyImgUrl.hashCode() : 0);
      result = result * 37 + (notifyExtInfo != null ? notifyExtInfo.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }
}
