// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Voucher.pb.h"

@implementation GetVoucherListRequest

- (instancetype) init {
  if ((self = [super init])) {
    _voucherStatus = 0;
    _voucherType = 0;
    _startIndex = 0;
    _userId = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasVoucherStatus) {
    [output writeInt32:1 value:self.voucherStatus];
  }
  if (self.hasVoucherType) {
    [output writeInt32:2 value:self.voucherType];
  }
  if (self.hasStartIndex) {
    [output writeInt32:3 value:self.startIndex];
  }
  if (self.hasUserId) {
    [output writeString:4 value:self.userId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasVoucherStatus) {
    size_ += computeInt32Size(1, self.voucherStatus);
  }
  if (self.hasVoucherType) {
    size_ += computeInt32Size(2, self.voucherType);
  }
  if (self.hasStartIndex) {
    size_ += computeInt32Size(3, self.startIndex);
  }
  if (self.hasUserId) {
    size_ += computeStringSize(4, self.userId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GetVoucherListRequest*) parseFromData:(NSData*) data {
  GetVoucherListRequest* result = [[GetVoucherListRequest alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasVoucherStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"voucherStatus", [NSNumber numberWithInteger:self.voucherStatus]];
  }
  if (self.hasVoucherType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"voucherType", [NSNumber numberWithInteger:self.voucherType]];
  }
  if (self.hasStartIndex) {
    [output appendFormat:@"%@%@: %@\n", indent, @"startIndex", [NSNumber numberWithInteger:self.startIndex]];
  }
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", self.userId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setVoucherStatus:(SInt32) value {
  _hasVoucherStatus = YES;
  _voucherStatus = value;
}
- (void) setVoucherType:(SInt32) value {
  _hasVoucherType = YES;
  _voucherType = value;
}
- (void) setStartIndex:(SInt32) value {
  _hasStartIndex = YES;
  _startIndex = value;
}
- (void) setUserId:(NSString*) value {
  _hasUserId = YES;
  _userId = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 8: {
        [self setVoucherStatus:[input readInt32]];
        break;
      }
      case 16: {
        [self setVoucherType:[input readInt32]];
        break;
      }
      case 24: {
        [self setStartIndex:[input readInt32]];
        break;
      }
      case 34: {
        [self setUserId:[input readString]];
        break;
      }
    }
  }
}
@end


@implementation GetVoucherListResult

- (instancetype) init {
  if ((self = [super init])) {
    _resultCode = @"";
    _resultMsg = @"";
    _hasMore = NO;
    _maxIndex = 0;
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResultCode) {
    [output writeString:1 value:self.resultCode];
  }
  if (self.hasResultMsg) {
    [output writeString:2 value:self.resultMsg];
  }
  if (self.hasHasMore) {
    [output writeBool:3 value:self.hasMore];
  }
  if (self.hasMaxIndex) {
    [output writeInt32:4 value:self.maxIndex];
  }
  [self.voucherInfo enumerateObjectsUsingBlock:^(VoucherInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:5 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasResultCode) {
    size_ += computeStringSize(1, self.resultCode);
  }
  if (self.hasResultMsg) {
    size_ += computeStringSize(2, self.resultMsg);
  }
  if (self.hasHasMore) {
    size_ += computeBoolSize(3, self.hasMore);
  }
  if (self.hasMaxIndex) {
    size_ += computeInt32Size(4, self.maxIndex);
  }
  [self.voucherInfo enumerateObjectsUsingBlock:^(VoucherInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(5, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GetVoucherListResult*) parseFromData:(NSData*) data {
  GetVoucherListResult* result = [[GetVoucherListResult alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasResultCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultCode", self.resultCode];
  }
  if (self.hasResultMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultMsg", self.resultMsg];
  }
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  if (self.hasMaxIndex) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxIndex", [NSNumber numberWithInteger:self.maxIndex]];
  }
  [self.voucherInfo enumerateObjectsUsingBlock:^(VoucherInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"voucherInfo"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setResultCode:(NSString*) value {
  _hasResultCode = YES;
  _resultCode = value;
}
- (void) setResultMsg:(NSString*) value {
  _hasResultMsg = YES;
  _resultMsg = value;
}
- (void) setHasMore:(BOOL) value {
  _hasHasMore = YES;
  _hasMore = value;
}
- (void) setMaxIndex:(SInt32) value {
  _hasMaxIndex = YES;
  _maxIndex = value;
}
- (void)setVoucherInfoArray:(NSArray *)array {
  _voucherInfo = [[NSMutableArray alloc]initWithArray:array];
}
- (void)addVoucherInfo:(VoucherInfo*)value {
  if (_voucherInfo == nil) {
    _voucherInfo = [[NSMutableArray alloc]init];
  }
  [_voucherInfo addObject:value];
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self setResultCode:[input readString]];
        break;
      }
      case 18: {
        [self setResultMsg:[input readString]];
        break;
      }
      case 24: {
        [self setHasMore:[input readBool]];
        break;
      }
      case 32: {
        [self setMaxIndex:[input readInt32]];
        break;
      }
      case 42: {
        VoucherInfo* sub = [[VoucherInfo alloc] init];
        [input readQJMessage:sub extensionRegistry:extensionRegistry];
        [self addVoucherInfo:sub];
        break;
      }
    }
  }
}
@end


@implementation VoucherInfo

- (instancetype) init {
  if ((self = [super init])) {
    _voucherId = @"";
    _voucherTitle = @"";
    _voucherType = @"";
    _voucherStatus = @"";
    _validStartTime = 0L;
    _validEndTime = 0L;
    _voucherDesc = @"";
    _voucherBenefit = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasVoucherId) {
    [output writeString:1 value:self.voucherId];
  }
  if (self.hasVoucherTitle) {
    [output writeString:2 value:self.voucherTitle];
  }
  if (self.hasVoucherType) {
    [output writeString:3 value:self.voucherType];
  }
  if (self.hasVoucherStatus) {
    [output writeString:4 value:self.voucherStatus];
  }
  if (self.hasValidStartTime) {
    [output writeInt64:5 value:self.validStartTime];
  }
  if (self.hasValidEndTime) {
    [output writeInt64:6 value:self.validEndTime];
  }
  if (self.hasVoucherDesc) {
    [output writeString:7 value:self.voucherDesc];
  }
  if (self.hasVoucherBenefit) {
    [output writeString:8 value:self.voucherBenefit];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasVoucherId) {
    size_ += computeStringSize(1, self.voucherId);
  }
  if (self.hasVoucherTitle) {
    size_ += computeStringSize(2, self.voucherTitle);
  }
  if (self.hasVoucherType) {
    size_ += computeStringSize(3, self.voucherType);
  }
  if (self.hasVoucherStatus) {
    size_ += computeStringSize(4, self.voucherStatus);
  }
  if (self.hasValidStartTime) {
    size_ += computeInt64Size(5, self.validStartTime);
  }
  if (self.hasValidEndTime) {
    size_ += computeInt64Size(6, self.validEndTime);
  }
  if (self.hasVoucherDesc) {
    size_ += computeStringSize(7, self.voucherDesc);
  }
  if (self.hasVoucherBenefit) {
    size_ += computeStringSize(8, self.voucherBenefit);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (VoucherInfo*) parseFromData:(NSData*) data {
  VoucherInfo* result = [[VoucherInfo alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasVoucherId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"voucherId", self.voucherId];
  }
  if (self.hasVoucherTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"voucherTitle", self.voucherTitle];
  }
  if (self.hasVoucherType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"voucherType", self.voucherType];
  }
  if (self.hasVoucherStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"voucherStatus", self.voucherStatus];
  }
  if (self.hasValidStartTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"validStartTime", [NSNumber numberWithLongLong:self.validStartTime]];
  }
  if (self.hasValidEndTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"validEndTime", [NSNumber numberWithLongLong:self.validEndTime]];
  }
  if (self.hasVoucherDesc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"voucherDesc", self.voucherDesc];
  }
  if (self.hasVoucherBenefit) {
    [output appendFormat:@"%@%@: %@\n", indent, @"voucherBenefit", self.voucherBenefit];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setVoucherId:(NSString*) value {
  _hasVoucherId = YES;
  _voucherId = value;
}
- (void) setVoucherTitle:(NSString*) value {
  _hasVoucherTitle = YES;
  _voucherTitle = value;
}
- (void) setVoucherType:(NSString*) value {
  _hasVoucherType = YES;
  _voucherType = value;
}
- (void) setVoucherStatus:(NSString*) value {
  _hasVoucherStatus = YES;
  _voucherStatus = value;
}
- (void) setValidStartTime:(SInt64) value {
  _hasValidStartTime = YES;
  _validStartTime = value;
}
- (void) setValidEndTime:(SInt64) value {
  _hasValidEndTime = YES;
  _validEndTime = value;
}
- (void) setVoucherDesc:(NSString*) value {
  _hasVoucherDesc = YES;
  _voucherDesc = value;
}
- (void) setVoucherBenefit:(NSString*) value {
  _hasVoucherBenefit = YES;
  _voucherBenefit = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self setVoucherId:[input readString]];
        break;
      }
      case 18: {
        [self setVoucherTitle:[input readString]];
        break;
      }
      case 26: {
        [self setVoucherType:[input readString]];
        break;
      }
      case 34: {
        [self setVoucherStatus:[input readString]];
        break;
      }
      case 40: {
        [self setValidStartTime:[input readInt64]];
        break;
      }
      case 48: {
        [self setValidEndTime:[input readInt64]];
        break;
      }
      case 58: {
        [self setVoucherDesc:[input readString]];
        break;
      }
      case 66: {
        [self setVoucherBenefit:[input readString]];
        break;
      }
    }
  }
}
@end


