// Code generated by Wire-Lite protocol buffer compiler, do not edit.
// Source file: ///home/admin/protobuf/src/c682b7e5dbf2c0c3afd1a06444348cb3/proto/Order
package com.qjoy.basjoo.core.model.pb;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * 继续支付定金结果（从未完成定金付款的订单列表提交）
 */
public final class ContinuePayEarnestResult extends Message {

  public static final int TAG_RESULTCODE = 1;
  public static final int TAG_RESULTMSG = 2;
  public static final int TAG_ORDERID = 3;
  public static final int TAG_PAYCHANNEL = 4;
  public static final int TAG_WXPAYINFO = 5;

  public static final String DEFAULT_RESULTCODE = "";
  public static final String DEFAULT_RESULTMSG = "";
  public static final String DEFAULT_ORDERID = "";
  public static final Integer DEFAULT_PAYCHANNEL = 0;

  @ProtoField(tag = 1, type = STRING, label = REQUIRED)
  public String resultCode;

  @ProtoField(tag = 2, type = STRING, label = REQUIRED)
  public String resultMsg;

  /**
   * 订单Id
   */
  @ProtoField(tag = 3, type = STRING)
  public String orderId;

  /**
   * 支付渠道，0：微信支付，1：支付宝
   */
  @ProtoField(tag = 4, type = INT32)
  public Integer payChannel;

  /**
   * 微信订单支付信息
   */
  @ProtoField(tag = 5)
  public WxPayInfo wxPayInfo;

  public ContinuePayEarnestResult(ContinuePayEarnestResult message) {
    super(message);
    if (message == null) return;
    this.resultCode = message.resultCode;
    this.resultMsg = message.resultMsg;
    this.orderId = message.orderId;
    this.payChannel = message.payChannel;
    this.wxPayInfo = message.wxPayInfo;
  }

  public ContinuePayEarnestResult() {
  }

  public ContinuePayEarnestResult fillTagValue(int tag, Object value) {
    switch(tag) {
        case TAG_RESULTCODE:
        this.resultCode = (String)value;
        break;
        case TAG_RESULTMSG:
        this.resultMsg = (String)value;
        break;
        case TAG_ORDERID:
        this.orderId = (String)value;
        break;
        case TAG_PAYCHANNEL:
        this.payChannel = (Integer)value;
        break;
        case TAG_WXPAYINFO:
        this.wxPayInfo = (WxPayInfo)value;
        break;
        default: break;
        };
    return this;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ContinuePayEarnestResult)) return false;
    ContinuePayEarnestResult o = (ContinuePayEarnestResult) other;
    return equals(resultCode, o.resultCode)
        && equals(resultMsg, o.resultMsg)
        && equals(orderId, o.orderId)
        && equals(payChannel, o.payChannel)
        && equals(wxPayInfo, o.wxPayInfo);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = resultCode != null ? resultCode.hashCode() : 0;
      result = result * 37 + (resultMsg != null ? resultMsg.hashCode() : 0);
      result = result * 37 + (orderId != null ? orderId.hashCode() : 0);
      result = result * 37 + (payChannel != null ? payChannel.hashCode() : 0);
      result = result * 37 + (wxPayInfo != null ? wxPayInfo.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }
}
