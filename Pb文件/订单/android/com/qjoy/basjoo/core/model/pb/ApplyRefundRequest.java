// Code generated by Wire-Lite protocol buffer compiler, do not edit.
// Source file: ///home/admin/protobuf/src/c682b7e5dbf2c0c3afd1a06444348cb3/proto/Order
package com.qjoy.basjoo.core.model.pb;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.DOUBLE;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * 申请退款请求
 */
public final class ApplyRefundRequest extends Message {

  public static final int TAG_USERID = 1;
  public static final int TAG_ORDERID = 2;
  public static final int TAG_REFUNDTYPE = 3;
  public static final int TAG_GOODSSTATUS = 4;
  public static final int TAG_REFUNDREASON = 5;
  public static final int TAG_REFUNDFEE = 6;
  public static final int TAG_EVIDENTALIMGS = 7;

  public static final String DEFAULT_USERID = "";
  public static final String DEFAULT_ORDERID = "";
  public static final String DEFAULT_REFUNDTYPE = "";
  public static final String DEFAULT_GOODSSTATUS = "";
  public static final String DEFAULT_REFUNDREASON = "";
  public static final Double DEFAULT_REFUNDFEE = 0D;
  public static final List<String> DEFAULT_EVIDENTALIMGS = Collections.emptyList();

  /**
   * 用户ID
   */
  @ProtoField(tag = 1, type = STRING, label = REQUIRED)
  public String userId;

  /**
   * 订单ID
   */
  @ProtoField(tag = 2, type = STRING, label = REQUIRED)
  public String orderId;

  /**
   * 退款类型 1：仅退款，2：退款＋退货
   */
  @ProtoField(tag = 3, type = STRING, label = REQUIRED)
  public String refundType;

  /**
   * 货物状态
   */
  @ProtoField(tag = 4, type = STRING)
  public String goodsStatus;

  /**
   * 退款理由
   */
  @ProtoField(tag = 5, type = STRING, label = REQUIRED)
  public String refundReason;

  /**
   * 退款金额
   */
  @ProtoField(tag = 6, type = DOUBLE)
  public Double refundFee;

  /**
   * 退款凭证图片
   */
  @ProtoField(tag = 7, type = STRING, label = REPEATED)
  public List<String> evidentalImgs;

  public ApplyRefundRequest(ApplyRefundRequest message) {
    super(message);
    if (message == null) return;
    this.userId = message.userId;
    this.orderId = message.orderId;
    this.refundType = message.refundType;
    this.goodsStatus = message.goodsStatus;
    this.refundReason = message.refundReason;
    this.refundFee = message.refundFee;
    this.evidentalImgs = copyOf(message.evidentalImgs);
  }

  public ApplyRefundRequest() {
  }

  public ApplyRefundRequest fillTagValue(int tag, Object value) {
    switch(tag) {
        case TAG_USERID:
        this.userId = (String)value;
        break;
        case TAG_ORDERID:
        this.orderId = (String)value;
        break;
        case TAG_REFUNDTYPE:
        this.refundType = (String)value;
        break;
        case TAG_GOODSSTATUS:
        this.goodsStatus = (String)value;
        break;
        case TAG_REFUNDREASON:
        this.refundReason = (String)value;
        break;
        case TAG_REFUNDFEE:
        this.refundFee = (Double)value;
        break;
        case TAG_EVIDENTALIMGS:
        this.evidentalImgs = immutableCopyOf((List<String>)value);
        break;
        default: break;
        };
    return this;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ApplyRefundRequest)) return false;
    ApplyRefundRequest o = (ApplyRefundRequest) other;
    return equals(userId, o.userId)
        && equals(orderId, o.orderId)
        && equals(refundType, o.refundType)
        && equals(goodsStatus, o.goodsStatus)
        && equals(refundReason, o.refundReason)
        && equals(refundFee, o.refundFee)
        && equals(evidentalImgs, o.evidentalImgs);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = userId != null ? userId.hashCode() : 0;
      result = result * 37 + (orderId != null ? orderId.hashCode() : 0);
      result = result * 37 + (refundType != null ? refundType.hashCode() : 0);
      result = result * 37 + (goodsStatus != null ? goodsStatus.hashCode() : 0);
      result = result * 37 + (refundReason != null ? refundReason.hashCode() : 0);
      result = result * 37 + (refundFee != null ? refundFee.hashCode() : 0);
      result = result * 37 + (evidentalImgs != null ? evidentalImgs.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }
}
