// Code generated by Wire-Lite protocol buffer compiler, do not edit.
// Source file: ///home/admin/protobuf/src/a2b8fd327f9c12e5c95fdde3c7b99d4c/proto/Recommend
package com.qjoy.basjoo.core.model.pb;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class RecommendUserInfo extends Message {

  public static final int TAG_USERID = 1;
  public static final int TAG_USERNAME = 2;
  public static final int TAG_RECOMMENDTIME = 3;

  public static final String DEFAULT_USERID = "";
  public static final String DEFAULT_USERNAME = "";
  public static final Long DEFAULT_RECOMMENDTIME = 0L;

  /**
   * 用户ID
   */
  @ProtoField(tag = 1, type = STRING, label = REQUIRED)
  public String userId;

  /**
   * 用户名称
   */
  @ProtoField(tag = 2, type = STRING, label = REQUIRED)
  public String userName;

  /**
   * 注册推荐时间
   */
  @ProtoField(tag = 3, type = INT64, label = REQUIRED)
  public Long recommendTime;

  public RecommendUserInfo(RecommendUserInfo message) {
    super(message);
    if (message == null) return;
    this.userId = message.userId;
    this.userName = message.userName;
    this.recommendTime = message.recommendTime;
  }

  public RecommendUserInfo() {
  }

  public RecommendUserInfo fillTagValue(int tag, Object value) {
    switch(tag) {
        case TAG_USERID:
        this.userId = (String)value;
        break;
        case TAG_USERNAME:
        this.userName = (String)value;
        break;
        case TAG_RECOMMENDTIME:
        this.recommendTime = (Long)value;
        break;
        default: break;
        };
    return this;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof RecommendUserInfo)) return false;
    RecommendUserInfo o = (RecommendUserInfo) other;
    return equals(userId, o.userId)
        && equals(userName, o.userName)
        && equals(recommendTime, o.recommendTime);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = userId != null ? userId.hashCode() : 0;
      result = result * 37 + (userName != null ? userName.hashCode() : 0);
      result = result * 37 + (recommendTime != null ? recommendTime.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }
}
