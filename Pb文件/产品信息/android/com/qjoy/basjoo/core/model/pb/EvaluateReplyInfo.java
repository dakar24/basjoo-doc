// Code generated by Wire-Lite protocol buffer compiler, do not edit.
// Source file: ///home/admin/protobuf/src/a955ef220d2efc3228333bbe1c4a864d/proto/Product
package com.qjoy.basjoo.core.model.pb;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * 评价回复信息
 */
public final class EvaluateReplyInfo extends Message {

  public static final int TAG_REPLYID = 1;
  public static final int TAG_CONTENT = 2;
  public static final int TAG_TIME = 3;
  public static final int TAG_FROMMECHANT = 4;

  public static final String DEFAULT_REPLYID = "";
  public static final String DEFAULT_CONTENT = "";
  public static final Long DEFAULT_TIME = 0L;
  public static final Boolean DEFAULT_FROMMECHANT = false;

  /**
   * 回复Id
   */
  @ProtoField(tag = 1, type = STRING, label = REQUIRED)
  public String replyId;

  /**
   * 回复内容
   */
  @ProtoField(tag = 2, type = STRING, label = REQUIRED)
  public String content;

  /**
   * 回复时间
   */
  @ProtoField(tag = 3, type = INT64, label = REQUIRED)
  public Long time;

  /**
   * 是否为掌柜回复（商家回复）
   */
  @ProtoField(tag = 4, type = BOOL, label = REQUIRED)
  public Boolean fromMechant;

  public EvaluateReplyInfo(EvaluateReplyInfo message) {
    super(message);
    if (message == null) return;
    this.replyId = message.replyId;
    this.content = message.content;
    this.time = message.time;
    this.fromMechant = message.fromMechant;
  }

  public EvaluateReplyInfo() {
  }

  public EvaluateReplyInfo fillTagValue(int tag, Object value) {
    switch(tag) {
        case TAG_REPLYID:
        this.replyId = (String)value;
        break;
        case TAG_CONTENT:
        this.content = (String)value;
        break;
        case TAG_TIME:
        this.time = (Long)value;
        break;
        case TAG_FROMMECHANT:
        this.fromMechant = (Boolean)value;
        break;
        default: break;
        };
    return this;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof EvaluateReplyInfo)) return false;
    EvaluateReplyInfo o = (EvaluateReplyInfo) other;
    return equals(replyId, o.replyId)
        && equals(content, o.content)
        && equals(time, o.time)
        && equals(fromMechant, o.fromMechant);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = replyId != null ? replyId.hashCode() : 0;
      result = result * 37 + (content != null ? content.hashCode() : 0);
      result = result * 37 + (time != null ? time.hashCode() : 0);
      result = result * 37 + (fromMechant != null ? fromMechant.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }
}
