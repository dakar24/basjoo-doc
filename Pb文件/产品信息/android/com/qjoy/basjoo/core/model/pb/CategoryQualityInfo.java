// Code generated by Wire-Lite protocol buffer compiler, do not edit.
// Source file: ///home/admin/protobuf/src/a955ef220d2efc3228333bbe1c4a864d/proto/Product
package com.qjoy.basjoo.core.model.pb;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.DOUBLE;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * 库存，押金信息,根据categoryCode,rentCode组合条件确定
 */
public final class CategoryQualityInfo extends Message {

  public static final int TAG_CODEKEY = 1;
  public static final int TAG_STOCKCOUNT = 2;
  public static final int TAG_PLEDGEPRICE = 3;

  public static final String DEFAULT_CODEKEY = "";
  public static final Integer DEFAULT_STOCKCOUNT = 0;
  public static final Double DEFAULT_PLEDGEPRICE = 0D;

  /**
   * codeKey （组合条件确定：categoryCode_qualityCode）
   */
  @ProtoField(tag = 1, type = STRING, label = REQUIRED)
  public String codeKey;

  /**
   * 库存信息
   */
  @ProtoField(tag = 2, type = INT32, label = REQUIRED)
  public Integer stockCount;

  /**
   * 押金
   */
  @ProtoField(tag = 3, type = DOUBLE, label = REQUIRED)
  public Double pledgePrice;

  public CategoryQualityInfo(CategoryQualityInfo message) {
    super(message);
    if (message == null) return;
    this.codeKey = message.codeKey;
    this.stockCount = message.stockCount;
    this.pledgePrice = message.pledgePrice;
  }

  public CategoryQualityInfo() {
  }

  public CategoryQualityInfo fillTagValue(int tag, Object value) {
    switch(tag) {
        case TAG_CODEKEY:
        this.codeKey = (String)value;
        break;
        case TAG_STOCKCOUNT:
        this.stockCount = (Integer)value;
        break;
        case TAG_PLEDGEPRICE:
        this.pledgePrice = (Double)value;
        break;
        default: break;
        };
    return this;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof CategoryQualityInfo)) return false;
    CategoryQualityInfo o = (CategoryQualityInfo) other;
    return equals(codeKey, o.codeKey)
        && equals(stockCount, o.stockCount)
        && equals(pledgePrice, o.pledgePrice);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = codeKey != null ? codeKey.hashCode() : 0;
      result = result * 37 + (stockCount != null ? stockCount.hashCode() : 0);
      result = result * 37 + (pledgePrice != null ? pledgePrice.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }
}
