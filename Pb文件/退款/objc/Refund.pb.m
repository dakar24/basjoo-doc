// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Refund.pb.h"

@implementation GetRefundDetailRequest

- (instancetype) init {
  if ((self = [super init])) {
    _userId = @"";
    _orderId = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeString:1 value:self.userId];
  }
  if (self.hasOrderId) {
    [output writeString:2 value:self.orderId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeStringSize(1, self.userId);
  }
  if (self.hasOrderId) {
    size_ += computeStringSize(2, self.orderId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GetRefundDetailRequest*) parseFromData:(NSData*) data {
  GetRefundDetailRequest* result = [[GetRefundDetailRequest alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", self.userId];
  }
  if (self.hasOrderId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"orderId", self.orderId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setUserId:(NSString*) value {
  _hasUserId = YES;
  _userId = value;
}
- (void) setOrderId:(NSString*) value {
  _hasOrderId = YES;
  _orderId = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self setUserId:[input readString]];
        break;
      }
      case 18: {
        [self setOrderId:[input readString]];
        break;
      }
    }
  }
}
@end


@implementation GetRefundDetailResult

- (instancetype) init {
  if ((self = [super init])) {
    _resultCode = @"";
    _resultMsg = @"";
    _orderStatus = 0;
    _refundType = @"";
    _refundReason = @"";
    _refundFee = 0;
    _applyTime = 0L;
    _refundTime = 0L;
    _refundIntro = @"";
    _transportationId = @"";
    _transportationCompany = @"";
    _transportationIntro = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResultCode) {
    [output writeString:1 value:self.resultCode];
  }
  if (self.hasResultMsg) {
    [output writeString:2 value:self.resultMsg];
  }
  if (self.hasOrderStatus) {
    [output writeInt32:3 value:self.orderStatus];
  }
  if (self.hasRefundType) {
    [output writeString:4 value:self.refundType];
  }
  if (self.hasRefundReason) {
    [output writeString:5 value:self.refundReason];
  }
  if (self.hasRefundFee) {
    [output writeDouble:6 value:self.refundFee];
  }
  if (self.hasApplyTime) {
    [output writeInt64:7 value:self.applyTime];
  }
  if (self.hasRefundTime) {
    [output writeInt64:8 value:self.refundTime];
  }
  [self.evidentalImgs enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:9 value:element];
  }];
  if (self.hasRefundIntro) {
    [output writeString:10 value:self.refundIntro];
  }
  if (self.hasTransportationId) {
    [output writeString:11 value:self.transportationId];
  }
  if (self.hasTransportationCompany) {
    [output writeString:12 value:self.transportationCompany];
  }
  if (self.hasTransportationIntro) {
    [output writeString:13 value:self.transportationIntro];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasResultCode) {
    size_ += computeStringSize(1, self.resultCode);
  }
  if (self.hasResultMsg) {
    size_ += computeStringSize(2, self.resultMsg);
  }
  if (self.hasOrderStatus) {
    size_ += computeInt32Size(3, self.orderStatus);
  }
  if (self.hasRefundType) {
    size_ += computeStringSize(4, self.refundType);
  }
  if (self.hasRefundReason) {
    size_ += computeStringSize(5, self.refundReason);
  }
  if (self.hasRefundFee) {
    size_ += computeDoubleSize(6, self.refundFee);
  }
  if (self.hasApplyTime) {
    size_ += computeInt64Size(7, self.applyTime);
  }
  if (self.hasRefundTime) {
    size_ += computeInt64Size(8, self.refundTime);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.evidentalImgs.count;
    [self.evidentalImgs enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasRefundIntro) {
    size_ += computeStringSize(10, self.refundIntro);
  }
  if (self.hasTransportationId) {
    size_ += computeStringSize(11, self.transportationId);
  }
  if (self.hasTransportationCompany) {
    size_ += computeStringSize(12, self.transportationCompany);
  }
  if (self.hasTransportationIntro) {
    size_ += computeStringSize(13, self.transportationIntro);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GetRefundDetailResult*) parseFromData:(NSData*) data {
  GetRefundDetailResult* result = [[GetRefundDetailResult alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasResultCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultCode", self.resultCode];
  }
  if (self.hasResultMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultMsg", self.resultMsg];
  }
  if (self.hasOrderStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"orderStatus", [NSNumber numberWithInteger:self.orderStatus]];
  }
  if (self.hasRefundType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"refundType", self.refundType];
  }
  if (self.hasRefundReason) {
    [output appendFormat:@"%@%@: %@\n", indent, @"refundReason", self.refundReason];
  }
  if (self.hasRefundFee) {
    [output appendFormat:@"%@%@: %@\n", indent, @"refundFee", [NSNumber numberWithDouble:self.refundFee]];
  }
  if (self.hasApplyTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"applyTime", [NSNumber numberWithLongLong:self.applyTime]];
  }
  if (self.hasRefundTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"refundTime", [NSNumber numberWithLongLong:self.refundTime]];
  }
  [self.evidentalImgs enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"evidentalImgs", obj];
  }];
  if (self.hasRefundIntro) {
    [output appendFormat:@"%@%@: %@\n", indent, @"refundIntro", self.refundIntro];
  }
  if (self.hasTransportationId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"transportationId", self.transportationId];
  }
  if (self.hasTransportationCompany) {
    [output appendFormat:@"%@%@: %@\n", indent, @"transportationCompany", self.transportationCompany];
  }
  if (self.hasTransportationIntro) {
    [output appendFormat:@"%@%@: %@\n", indent, @"transportationIntro", self.transportationIntro];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setResultCode:(NSString*) value {
  _hasResultCode = YES;
  _resultCode = value;
}
- (void) setResultMsg:(NSString*) value {
  _hasResultMsg = YES;
  _resultMsg = value;
}
- (void) setOrderStatus:(SInt32) value {
  _hasOrderStatus = YES;
  _orderStatus = value;
}
- (void) setRefundType:(NSString*) value {
  _hasRefundType = YES;
  _refundType = value;
}
- (void) setRefundReason:(NSString*) value {
  _hasRefundReason = YES;
  _refundReason = value;
}
- (void) setRefundFee:(Float64) value {
  _hasRefundFee = YES;
  _refundFee = value;
}
- (void) setApplyTime:(SInt64) value {
  _hasApplyTime = YES;
  _applyTime = value;
}
- (void) setRefundTime:(SInt64) value {
  _hasRefundTime = YES;
  _refundTime = value;
}
- (void)setEvidentalImgsArray:(NSArray *)array {
  _evidentalImgs = [[NSMutableArray alloc] initWithArray:array];
}
- (void)addEvidentalImgs:(NSString*)value {
  if (_evidentalImgs == nil) {
    _evidentalImgs = [[NSMutableArray alloc]init];
  }
  [_evidentalImgs addObject:value];
}
- (void) setRefundIntro:(NSString*) value {
  _hasRefundIntro = YES;
  _refundIntro = value;
}
- (void) setTransportationId:(NSString*) value {
  _hasTransportationId = YES;
  _transportationId = value;
}
- (void) setTransportationCompany:(NSString*) value {
  _hasTransportationCompany = YES;
  _transportationCompany = value;
}
- (void) setTransportationIntro:(NSString*) value {
  _hasTransportationIntro = YES;
  _transportationIntro = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self setResultCode:[input readString]];
        break;
      }
      case 18: {
        [self setResultMsg:[input readString]];
        break;
      }
      case 24: {
        [self setOrderStatus:[input readInt32]];
        break;
      }
      case 34: {
        [self setRefundType:[input readString]];
        break;
      }
      case 42: {
        [self setRefundReason:[input readString]];
        break;
      }
      case 49: {
        [self setRefundFee:[input readDouble]];
        break;
      }
      case 56: {
        [self setApplyTime:[input readInt64]];
        break;
      }
      case 64: {
        [self setRefundTime:[input readInt64]];
        break;
      }
      case 74: {
        [self addEvidentalImgs:[input readString]];
        break;
      }
      case 82: {
        [self setRefundIntro:[input readString]];
        break;
      }
      case 90: {
        [self setTransportationId:[input readString]];
        break;
      }
      case 98: {
        [self setTransportationCompany:[input readString]];
        break;
      }
      case 106: {
        [self setTransportationIntro:[input readString]];
        break;
      }
    }
  }
}
@end


