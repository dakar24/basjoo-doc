// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "RegisterUser.pb.h"

@implementation SendRegisterCheckCodeRequest

- (instancetype) init {
  if ((self = [super init])) {
    _mobileNo = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMobileNo) {
    [output writeString:1 value:self.mobileNo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasMobileNo) {
    size_ += computeStringSize(1, self.mobileNo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SendRegisterCheckCodeRequest*) parseFromData:(NSData*) data {
  SendRegisterCheckCodeRequest* result = [[SendRegisterCheckCodeRequest alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMobileNo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mobileNo", self.mobileNo];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setMobileNo:(NSString*) value {
  _hasMobileNo = YES;
  _mobileNo = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self setMobileNo:[input readString]];
        break;
      }
    }
  }
}
@end


@implementation SendRegisterCheckCodeResult

- (instancetype) init {
  if ((self = [super init])) {
    _resultCode = @"";
    _resultMsg = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResultCode) {
    [output writeString:1 value:self.resultCode];
  }
  if (self.hasResultMsg) {
    [output writeString:2 value:self.resultMsg];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasResultCode) {
    size_ += computeStringSize(1, self.resultCode);
  }
  if (self.hasResultMsg) {
    size_ += computeStringSize(2, self.resultMsg);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SendRegisterCheckCodeResult*) parseFromData:(NSData*) data {
  SendRegisterCheckCodeResult* result = [[SendRegisterCheckCodeResult alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasResultCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultCode", self.resultCode];
  }
  if (self.hasResultMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultMsg", self.resultMsg];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setResultCode:(NSString*) value {
  _hasResultCode = YES;
  _resultCode = value;
}
- (void) setResultMsg:(NSString*) value {
  _hasResultMsg = YES;
  _resultMsg = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self setResultCode:[input readString]];
        break;
      }
      case 18: {
        [self setResultMsg:[input readString]];
        break;
      }
    }
  }
}
@end


@implementation RegisterRequest

- (instancetype) init {
  if ((self = [super init])) {
    _mobileNo = @"";
    _checkCode = @"";
    _password = @"";
    _headIconUrl = @"";
    _recommendCode = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMobileNo) {
    [output writeString:1 value:self.mobileNo];
  }
  if (self.hasCheckCode) {
    [output writeString:2 value:self.checkCode];
  }
  if (self.hasPassword) {
    [output writeString:3 value:self.password];
  }
  if (self.hasHeadIconUrl) {
    [output writeString:4 value:self.headIconUrl];
  }
  if (self.hasRecommendCode) {
    [output writeString:5 value:self.recommendCode];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasMobileNo) {
    size_ += computeStringSize(1, self.mobileNo);
  }
  if (self.hasCheckCode) {
    size_ += computeStringSize(2, self.checkCode);
  }
  if (self.hasPassword) {
    size_ += computeStringSize(3, self.password);
  }
  if (self.hasHeadIconUrl) {
    size_ += computeStringSize(4, self.headIconUrl);
  }
  if (self.hasRecommendCode) {
    size_ += computeStringSize(5, self.recommendCode);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RegisterRequest*) parseFromData:(NSData*) data {
  RegisterRequest* result = [[RegisterRequest alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMobileNo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mobileNo", self.mobileNo];
  }
  if (self.hasCheckCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"checkCode", self.checkCode];
  }
  if (self.hasPassword) {
    [output appendFormat:@"%@%@: %@\n", indent, @"password", self.password];
  }
  if (self.hasHeadIconUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"headIconUrl", self.headIconUrl];
  }
  if (self.hasRecommendCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"recommendCode", self.recommendCode];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setMobileNo:(NSString*) value {
  _hasMobileNo = YES;
  _mobileNo = value;
}
- (void) setCheckCode:(NSString*) value {
  _hasCheckCode = YES;
  _checkCode = value;
}
- (void) setPassword:(NSString*) value {
  _hasPassword = YES;
  _password = value;
}
- (void) setHeadIconUrl:(NSString*) value {
  _hasHeadIconUrl = YES;
  _headIconUrl = value;
}
- (void) setRecommendCode:(NSString*) value {
  _hasRecommendCode = YES;
  _recommendCode = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self setMobileNo:[input readString]];
        break;
      }
      case 18: {
        [self setCheckCode:[input readString]];
        break;
      }
      case 26: {
        [self setPassword:[input readString]];
        break;
      }
      case 34: {
        [self setHeadIconUrl:[input readString]];
        break;
      }
      case 42: {
        [self setRecommendCode:[input readString]];
        break;
      }
    }
  }
}
@end


@implementation RegisterResult

- (instancetype) init {
  if ((self = [super init])) {
    _resultCode = @"";
    _resultMsg = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResultCode) {
    [output writeString:1 value:self.resultCode];
  }
  if (self.hasResultMsg) {
    [output writeString:2 value:self.resultMsg];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasResultCode) {
    size_ += computeStringSize(1, self.resultCode);
  }
  if (self.hasResultMsg) {
    size_ += computeStringSize(2, self.resultMsg);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RegisterResult*) parseFromData:(NSData*) data {
  RegisterResult* result = [[RegisterResult alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasResultCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultCode", self.resultCode];
  }
  if (self.hasResultMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultMsg", self.resultMsg];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setResultCode:(NSString*) value {
  _hasResultCode = YES;
  _resultCode = value;
}
- (void) setResultMsg:(NSString*) value {
  _hasResultMsg = YES;
  _resultMsg = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self setResultCode:[input readString]];
        break;
      }
      case 18: {
        [self setResultMsg:[input readString]];
        break;
      }
    }
  }
}
@end


