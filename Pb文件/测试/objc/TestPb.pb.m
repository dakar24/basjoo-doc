// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "TestPb.pb.h"

@implementation ProtoResultTest

- (instancetype) init {
  if ((self = [super init])) {
    _isSuccess = NO;
    _resultCode = @"";
    _resultMessage = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIsSuccess) {
    [output writeBool:1 value:self.isSuccess];
  }
  if (self.hasResultCode) {
    [output writeString:2 value:self.resultCode];
  }
  if (self.hasResultMessage) {
    [output writeString:3 value:self.resultMessage];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasIsSuccess) {
    size_ += computeBoolSize(1, self.isSuccess);
  }
  if (self.hasResultCode) {
    size_ += computeStringSize(2, self.resultCode);
  }
  if (self.hasResultMessage) {
    size_ += computeStringSize(3, self.resultMessage);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ProtoResultTest*) parseFromData:(NSData*) data {
  ProtoResultTest* result = [[ProtoResultTest alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasIsSuccess) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isSuccess", [NSNumber numberWithBool:self.isSuccess]];
  }
  if (self.hasResultCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultCode", self.resultCode];
  }
  if (self.hasResultMessage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultMessage", self.resultMessage];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setIsSuccess:(BOOL) value {
  _hasIsSuccess = YES;
  _isSuccess = value;
}
- (void) setResultCode:(NSString*) value {
  _hasResultCode = YES;
  _resultCode = value;
}
- (void) setResultMessage:(NSString*) value {
  _hasResultMessage = YES;
  _resultMessage = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 8: {
        [self setIsSuccess:[input readBool]];
        break;
      }
      case 18: {
        [self setResultCode:[input readString]];
        break;
      }
      case 26: {
        [self setResultMessage:[input readString]];
        break;
      }
    }
  }
}
@end


@implementation ProtoRequestTest

- (instancetype) init {
  if ((self = [super init])) {
    _loginName = @"";
    _password = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLoginName) {
    [output writeString:1 value:self.loginName];
  }
  if (self.hasPassword) {
    [output writeString:2 value:self.password];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasLoginName) {
    size_ += computeStringSize(1, self.loginName);
  }
  if (self.hasPassword) {
    size_ += computeStringSize(2, self.password);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ProtoRequestTest*) parseFromData:(NSData*) data {
  ProtoRequestTest* result = [[ProtoRequestTest alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasLoginName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"loginName", self.loginName];
  }
  if (self.hasPassword) {
    [output appendFormat:@"%@%@: %@\n", indent, @"password", self.password];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setLoginName:(NSString*) value {
  _hasLoginName = YES;
  _loginName = value;
}
- (void) setPassword:(NSString*) value {
  _hasPassword = YES;
  _password = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self setLoginName:[input readString]];
        break;
      }
      case 18: {
        [self setPassword:[input readString]];
        break;
      }
    }
  }
}
@end


