// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Favorite.pb.h"

@implementation GetFavoriteListRequest

- (instancetype) init {
  if ((self = [super init])) {
    _startIndex = 0;
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStartIndex) {
    [output writeInt32:1 value:self.startIndex];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasStartIndex) {
    size_ += computeInt32Size(1, self.startIndex);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GetFavoriteListRequest*) parseFromData:(NSData*) data {
  GetFavoriteListRequest* result = [[GetFavoriteListRequest alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStartIndex) {
    [output appendFormat:@"%@%@: %@\n", indent, @"startIndex", [NSNumber numberWithInteger:self.startIndex]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setStartIndex:(SInt32) value {
  _hasStartIndex = YES;
  _startIndex = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 8: {
        [self setStartIndex:[input readInt32]];
        break;
      }
    }
  }
}
@end


@implementation GetFavoriteListResult

- (instancetype) init {
  if ((self = [super init])) {
    _resultCode = @"";
    _resultMsg = @"";
    _maxIndex = 0;
    _hasMore = NO;
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResultCode) {
    [output writeString:1 value:self.resultCode];
  }
  if (self.hasResultMsg) {
    [output writeString:2 value:self.resultMsg];
  }
  if (self.hasMaxIndex) {
    [output writeInt32:3 value:self.maxIndex];
  }
  if (self.hasHasMore) {
    [output writeBool:4 value:self.hasMore];
  }
  [self.favoriteLiteInfo enumerateObjectsUsingBlock:^(FavoriteLiteInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:5 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasResultCode) {
    size_ += computeStringSize(1, self.resultCode);
  }
  if (self.hasResultMsg) {
    size_ += computeStringSize(2, self.resultMsg);
  }
  if (self.hasMaxIndex) {
    size_ += computeInt32Size(3, self.maxIndex);
  }
  if (self.hasHasMore) {
    size_ += computeBoolSize(4, self.hasMore);
  }
  [self.favoriteLiteInfo enumerateObjectsUsingBlock:^(FavoriteLiteInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(5, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GetFavoriteListResult*) parseFromData:(NSData*) data {
  GetFavoriteListResult* result = [[GetFavoriteListResult alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasResultCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultCode", self.resultCode];
  }
  if (self.hasResultMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultMsg", self.resultMsg];
  }
  if (self.hasMaxIndex) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxIndex", [NSNumber numberWithInteger:self.maxIndex]];
  }
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.favoriteLiteInfo enumerateObjectsUsingBlock:^(FavoriteLiteInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"favoriteLiteInfo"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setResultCode:(NSString*) value {
  _hasResultCode = YES;
  _resultCode = value;
}
- (void) setResultMsg:(NSString*) value {
  _hasResultMsg = YES;
  _resultMsg = value;
}
- (void) setMaxIndex:(SInt32) value {
  _hasMaxIndex = YES;
  _maxIndex = value;
}
- (void) setHasMore:(BOOL) value {
  _hasHasMore = YES;
  _hasMore = value;
}
- (void)setFavoriteLiteInfoArray:(NSArray *)array {
  _favoriteLiteInfo = [[NSMutableArray alloc]initWithArray:array];
}
- (void)addFavoriteLiteInfo:(FavoriteLiteInfo*)value {
  if (_favoriteLiteInfo == nil) {
    _favoriteLiteInfo = [[NSMutableArray alloc]init];
  }
  [_favoriteLiteInfo addObject:value];
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self setResultCode:[input readString]];
        break;
      }
      case 18: {
        [self setResultMsg:[input readString]];
        break;
      }
      case 24: {
        [self setMaxIndex:[input readInt32]];
        break;
      }
      case 32: {
        [self setHasMore:[input readBool]];
        break;
      }
      case 42: {
        FavoriteLiteInfo* sub = [[FavoriteLiteInfo alloc] init];
        [input readQJMessage:sub extensionRegistry:extensionRegistry];
        [self addFavoriteLiteInfo:sub];
        break;
      }
    }
  }
}
@end


@implementation FavoriteLiteInfo

- (instancetype) init {
  if ((self = [super init])) {
    _productId = @"";
    _productType = @"";
    _brand = @"";
    _mainImageUrl = @"";
    _desc = @"";
    _lowestRent = 0;
    _unit = 0;
    _rentCount = 0L;
    _marketPrice = 0;
    _pledgePrice = 0;
    _favoriteId = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasProductId) {
    [output writeString:1 value:self.productId];
  }
  if (self.hasProductType) {
    [output writeString:2 value:self.productType];
  }
  if (self.hasBrand) {
    [output writeString:3 value:self.brand];
  }
  if (self.hasMainImageUrl) {
    [output writeString:4 value:self.mainImageUrl];
  }
  if (self.hasDesc) {
    [output writeString:5 value:self.desc];
  }
  if (self.hasLowestRent) {
    [output writeDouble:6 value:self.lowestRent];
  }
  if (self.hasUnit) {
    [output writeInt32:7 value:self.unit];
  }
  if (self.hasRentCount) {
    [output writeInt64:8 value:self.rentCount];
  }
  if (self.hasMarketPrice) {
    [output writeDouble:9 value:self.marketPrice];
  }
  if (self.hasPledgePrice) {
    [output writeDouble:10 value:self.pledgePrice];
  }
  if (self.hasFavoriteId) {
    [output writeString:11 value:self.favoriteId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasProductId) {
    size_ += computeStringSize(1, self.productId);
  }
  if (self.hasProductType) {
    size_ += computeStringSize(2, self.productType);
  }
  if (self.hasBrand) {
    size_ += computeStringSize(3, self.brand);
  }
  if (self.hasMainImageUrl) {
    size_ += computeStringSize(4, self.mainImageUrl);
  }
  if (self.hasDesc) {
    size_ += computeStringSize(5, self.desc);
  }
  if (self.hasLowestRent) {
    size_ += computeDoubleSize(6, self.lowestRent);
  }
  if (self.hasUnit) {
    size_ += computeInt32Size(7, self.unit);
  }
  if (self.hasRentCount) {
    size_ += computeInt64Size(8, self.rentCount);
  }
  if (self.hasMarketPrice) {
    size_ += computeDoubleSize(9, self.marketPrice);
  }
  if (self.hasPledgePrice) {
    size_ += computeDoubleSize(10, self.pledgePrice);
  }
  if (self.hasFavoriteId) {
    size_ += computeStringSize(11, self.favoriteId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (FavoriteLiteInfo*) parseFromData:(NSData*) data {
  FavoriteLiteInfo* result = [[FavoriteLiteInfo alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasProductId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"productId", self.productId];
  }
  if (self.hasProductType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"productType", self.productType];
  }
  if (self.hasBrand) {
    [output appendFormat:@"%@%@: %@\n", indent, @"brand", self.brand];
  }
  if (self.hasMainImageUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mainImageUrl", self.mainImageUrl];
  }
  if (self.hasDesc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"desc", self.desc];
  }
  if (self.hasLowestRent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lowestRent", [NSNumber numberWithDouble:self.lowestRent]];
  }
  if (self.hasUnit) {
    [output appendFormat:@"%@%@: %@\n", indent, @"unit", [NSNumber numberWithInteger:self.unit]];
  }
  if (self.hasRentCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"rentCount", [NSNumber numberWithLongLong:self.rentCount]];
  }
  if (self.hasMarketPrice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"marketPrice", [NSNumber numberWithDouble:self.marketPrice]];
  }
  if (self.hasPledgePrice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pledgePrice", [NSNumber numberWithDouble:self.pledgePrice]];
  }
  if (self.hasFavoriteId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"favoriteId", self.favoriteId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setProductId:(NSString*) value {
  _hasProductId = YES;
  _productId = value;
}
- (void) setProductType:(NSString*) value {
  _hasProductType = YES;
  _productType = value;
}
- (void) setBrand:(NSString*) value {
  _hasBrand = YES;
  _brand = value;
}
- (void) setMainImageUrl:(NSString*) value {
  _hasMainImageUrl = YES;
  _mainImageUrl = value;
}
- (void) setDesc:(NSString*) value {
  _hasDesc = YES;
  _desc = value;
}
- (void) setLowestRent:(Float64) value {
  _hasLowestRent = YES;
  _lowestRent = value;
}
- (void) setUnit:(SInt32) value {
  _hasUnit = YES;
  _unit = value;
}
- (void) setRentCount:(SInt64) value {
  _hasRentCount = YES;
  _rentCount = value;
}
- (void) setMarketPrice:(Float64) value {
  _hasMarketPrice = YES;
  _marketPrice = value;
}
- (void) setPledgePrice:(Float64) value {
  _hasPledgePrice = YES;
  _pledgePrice = value;
}
- (void) setFavoriteId:(NSString*) value {
  _hasFavoriteId = YES;
  _favoriteId = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self setProductId:[input readString]];
        break;
      }
      case 18: {
        [self setProductType:[input readString]];
        break;
      }
      case 26: {
        [self setBrand:[input readString]];
        break;
      }
      case 34: {
        [self setMainImageUrl:[input readString]];
        break;
      }
      case 42: {
        [self setDesc:[input readString]];
        break;
      }
      case 49: {
        [self setLowestRent:[input readDouble]];
        break;
      }
      case 56: {
        [self setUnit:[input readInt32]];
        break;
      }
      case 64: {
        [self setRentCount:[input readInt64]];
        break;
      }
      case 73: {
        [self setMarketPrice:[input readDouble]];
        break;
      }
      case 81: {
        [self setPledgePrice:[input readDouble]];
        break;
      }
      case 90: {
        [self setFavoriteId:[input readString]];
        break;
      }
    }
  }
}
@end


@implementation AddFavoriteRequest

- (instancetype) init {
  if ((self = [super init])) {
    _productId = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasProductId) {
    [output writeString:1 value:self.productId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasProductId) {
    size_ += computeStringSize(1, self.productId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AddFavoriteRequest*) parseFromData:(NSData*) data {
  AddFavoriteRequest* result = [[AddFavoriteRequest alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasProductId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"productId", self.productId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setProductId:(NSString*) value {
  _hasProductId = YES;
  _productId = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self setProductId:[input readString]];
        break;
      }
    }
  }
}
@end


@implementation AddFavoriteResult

- (instancetype) init {
  if ((self = [super init])) {
    _resultCode = @"";
    _resultMsg = @"";
    _favoriteId = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResultCode) {
    [output writeString:1 value:self.resultCode];
  }
  if (self.hasResultMsg) {
    [output writeString:2 value:self.resultMsg];
  }
  if (self.hasFavoriteId) {
    [output writeString:3 value:self.favoriteId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasResultCode) {
    size_ += computeStringSize(1, self.resultCode);
  }
  if (self.hasResultMsg) {
    size_ += computeStringSize(2, self.resultMsg);
  }
  if (self.hasFavoriteId) {
    size_ += computeStringSize(3, self.favoriteId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AddFavoriteResult*) parseFromData:(NSData*) data {
  AddFavoriteResult* result = [[AddFavoriteResult alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasResultCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultCode", self.resultCode];
  }
  if (self.hasResultMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultMsg", self.resultMsg];
  }
  if (self.hasFavoriteId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"favoriteId", self.favoriteId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setResultCode:(NSString*) value {
  _hasResultCode = YES;
  _resultCode = value;
}
- (void) setResultMsg:(NSString*) value {
  _hasResultMsg = YES;
  _resultMsg = value;
}
- (void) setFavoriteId:(NSString*) value {
  _hasFavoriteId = YES;
  _favoriteId = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self setResultCode:[input readString]];
        break;
      }
      case 18: {
        [self setResultMsg:[input readString]];
        break;
      }
      case 26: {
        [self setFavoriteId:[input readString]];
        break;
      }
    }
  }
}
@end


@implementation DeleteFavoriteRequest

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.favoriteIds enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.favoriteIds.count;
    [self.favoriteIds enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (DeleteFavoriteRequest*) parseFromData:(NSData*) data {
  DeleteFavoriteRequest* result = [[DeleteFavoriteRequest alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.favoriteIds enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"favoriteIds", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void)setFavoriteIdsArray:(NSArray *)array {
  _favoriteIds = [[NSMutableArray alloc] initWithArray:array];
}
- (void)addFavoriteIds:(NSString*)value {
  if (_favoriteIds == nil) {
    _favoriteIds = [[NSMutableArray alloc]init];
  }
  [_favoriteIds addObject:value];
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self addFavoriteIds:[input readString]];
        break;
      }
    }
  }
}
@end


@implementation DeleteFavoriteResult

- (instancetype) init {
  if ((self = [super init])) {
    _resultCode = @"";
    _resultMsg = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResultCode) {
    [output writeString:1 value:self.resultCode];
  }
  if (self.hasResultMsg) {
    [output writeString:2 value:self.resultMsg];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasResultCode) {
    size_ += computeStringSize(1, self.resultCode);
  }
  if (self.hasResultMsg) {
    size_ += computeStringSize(2, self.resultMsg);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (DeleteFavoriteResult*) parseFromData:(NSData*) data {
  DeleteFavoriteResult* result = [[DeleteFavoriteResult alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasResultCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultCode", self.resultCode];
  }
  if (self.hasResultMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultMsg", self.resultMsg];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setResultCode:(NSString*) value {
  _hasResultCode = YES;
  _resultCode = value;
}
- (void) setResultMsg:(NSString*) value {
  _hasResultMsg = YES;
  _resultMsg = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self setResultCode:[input readString]];
        break;
      }
      case 18: {
        [self setResultMsg:[input readString]];
        break;
      }
    }
  }
}
@end


