// Code generated by Wire-Lite protocol buffer compiler, do not edit.
// Source file: ///home/admin/protobuf/src/3b364368d3c081841ba4e1f688208770/proto/Topic
package com.qjoy.basjoo.core.model.pb;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * 回复信息
 */
public final class TopicReplyInfo extends Message {

  public static final int TAG_REPLYID = 1;
  public static final int TAG_REPLYUSERID = 2;
  public static final int TAG_REPLYNICKNAME = 3;
  public static final int TAG_REPLYUSERHEADICONURL = 4;
  public static final int TAG_REPLYTOUSERID = 5;
  public static final int TAG_REPLYTONICKNAME = 6;
  public static final int TAG_REPLYCONTENT = 7;
  public static final int TAG_REPLYTIME = 8;

  public static final String DEFAULT_REPLYID = "";
  public static final String DEFAULT_REPLYUSERID = "";
  public static final String DEFAULT_REPLYNICKNAME = "";
  public static final String DEFAULT_REPLYUSERHEADICONURL = "";
  public static final String DEFAULT_REPLYTOUSERID = "";
  public static final String DEFAULT_REPLYTONICKNAME = "";
  public static final String DEFAULT_REPLYCONTENT = "";
  public static final Long DEFAULT_REPLYTIME = 0L;

  /**
   * 回复ID;
   */
  @ProtoField(tag = 1, type = STRING, label = REQUIRED)
  public String replyId;

  /**
   * 回复用户ID
   */
  @ProtoField(tag = 2, type = STRING, label = REQUIRED)
  public String replyUserId;

  /**
   * 回复用户昵称
   */
  @ProtoField(tag = 3, type = STRING, label = REQUIRED)
  public String replyNickName;

  /**
   * 回复用户的头像地址
   */
  @ProtoField(tag = 4, type = STRING)
  public String replyUserHeadIconUrl;

  /**
   * 指向某人的用户ID
   */
  @ProtoField(tag = 5, type = STRING)
  public String replyToUserId;

  /**
   * 指向某人的用户昵称
   */
  @ProtoField(tag = 6, type = STRING)
  public String replyToNickName;

  /**
   * 回复内容
   */
  @ProtoField(tag = 7, type = STRING, label = REQUIRED)
  public String replyContent;

  /**
   * 回复时间
   */
  @ProtoField(tag = 8, type = INT64, label = REQUIRED)
  public Long replyTime;

  public TopicReplyInfo(TopicReplyInfo message) {
    super(message);
    if (message == null) return;
    this.replyId = message.replyId;
    this.replyUserId = message.replyUserId;
    this.replyNickName = message.replyNickName;
    this.replyUserHeadIconUrl = message.replyUserHeadIconUrl;
    this.replyToUserId = message.replyToUserId;
    this.replyToNickName = message.replyToNickName;
    this.replyContent = message.replyContent;
    this.replyTime = message.replyTime;
  }

  public TopicReplyInfo() {
  }

  public TopicReplyInfo fillTagValue(int tag, Object value) {
    switch(tag) {
        case TAG_REPLYID:
        this.replyId = (String)value;
        break;
        case TAG_REPLYUSERID:
        this.replyUserId = (String)value;
        break;
        case TAG_REPLYNICKNAME:
        this.replyNickName = (String)value;
        break;
        case TAG_REPLYUSERHEADICONURL:
        this.replyUserHeadIconUrl = (String)value;
        break;
        case TAG_REPLYTOUSERID:
        this.replyToUserId = (String)value;
        break;
        case TAG_REPLYTONICKNAME:
        this.replyToNickName = (String)value;
        break;
        case TAG_REPLYCONTENT:
        this.replyContent = (String)value;
        break;
        case TAG_REPLYTIME:
        this.replyTime = (Long)value;
        break;
        default: break;
        };
    return this;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof TopicReplyInfo)) return false;
    TopicReplyInfo o = (TopicReplyInfo) other;
    return equals(replyId, o.replyId)
        && equals(replyUserId, o.replyUserId)
        && equals(replyNickName, o.replyNickName)
        && equals(replyUserHeadIconUrl, o.replyUserHeadIconUrl)
        && equals(replyToUserId, o.replyToUserId)
        && equals(replyToNickName, o.replyToNickName)
        && equals(replyContent, o.replyContent)
        && equals(replyTime, o.replyTime);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = replyId != null ? replyId.hashCode() : 0;
      result = result * 37 + (replyUserId != null ? replyUserId.hashCode() : 0);
      result = result * 37 + (replyNickName != null ? replyNickName.hashCode() : 0);
      result = result * 37 + (replyUserHeadIconUrl != null ? replyUserHeadIconUrl.hashCode() : 0);
      result = result * 37 + (replyToUserId != null ? replyToUserId.hashCode() : 0);
      result = result * 37 + (replyToNickName != null ? replyToNickName.hashCode() : 0);
      result = result * 37 + (replyContent != null ? replyContent.hashCode() : 0);
      result = result * 37 + (replyTime != null ? replyTime.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }
}
