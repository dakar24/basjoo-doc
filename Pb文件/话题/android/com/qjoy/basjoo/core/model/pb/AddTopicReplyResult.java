// Code generated by Wire-Lite protocol buffer compiler, do not edit.
// Source file: ///home/admin/protobuf/src/3b364368d3c081841ba4e1f688208770/proto/Topic
package com.qjoy.basjoo.core.model.pb;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * 回复话题结果
 */
public final class AddTopicReplyResult extends Message {

  public static final int TAG_SUCCESS = 1;
  public static final int TAG_RESULTCODE = 2;
  public static final int TAG_RESULTMSG = 3;

  public static final Boolean DEFAULT_SUCCESS = false;
  public static final String DEFAULT_RESULTCODE = "";
  public static final String DEFAULT_RESULTMSG = "";

  /**
   * 是否成功
   */
  @ProtoField(tag = 1, type = BOOL, label = REQUIRED)
  public Boolean success;

  /**
   * 结果
   */
  @ProtoField(tag = 2, type = STRING, label = REQUIRED)
  public String resultCode;

  /**
   * 结果码
   */
  @ProtoField(tag = 3, type = STRING, label = REQUIRED)
  public String resultMsg;

  public AddTopicReplyResult(AddTopicReplyResult message) {
    super(message);
    if (message == null) return;
    this.success = message.success;
    this.resultCode = message.resultCode;
    this.resultMsg = message.resultMsg;
  }

  public AddTopicReplyResult() {
  }

  public AddTopicReplyResult fillTagValue(int tag, Object value) {
    switch(tag) {
        case TAG_SUCCESS:
        this.success = (Boolean)value;
        break;
        case TAG_RESULTCODE:
        this.resultCode = (String)value;
        break;
        case TAG_RESULTMSG:
        this.resultMsg = (String)value;
        break;
        default: break;
        };
    return this;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AddTopicReplyResult)) return false;
    AddTopicReplyResult o = (AddTopicReplyResult) other;
    return equals(success, o.success)
        && equals(resultCode, o.resultCode)
        && equals(resultMsg, o.resultMsg);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = success != null ? success.hashCode() : 0;
      result = result * 37 + (resultCode != null ? resultCode.hashCode() : 0);
      result = result * 37 + (resultMsg != null ? resultMsg.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }
}
