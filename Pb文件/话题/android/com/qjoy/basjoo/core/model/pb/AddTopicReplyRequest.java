// Code generated by Wire-Lite protocol buffer compiler, do not edit.
// Source file: ///home/admin/protobuf/src/3b364368d3c081841ba4e1f688208770/proto/Topic
package com.qjoy.basjoo.core.model.pb;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * 回复话题请求
 */
public final class AddTopicReplyRequest extends Message {

  public static final int TAG_TOPICID = 1;
  public static final int TAG_REPLYTOID = 2;
  public static final int TAG_REPLYCONTENT = 3;
  public static final int TAG_USERID = 4;

  public static final String DEFAULT_TOPICID = "";
  public static final String DEFAULT_REPLYTOID = "";
  public static final String DEFAULT_REPLYCONTENT = "";
  public static final String DEFAULT_USERID = "";

  /**
   * 话题ID;
   */
  @ProtoField(tag = 1, type = STRING, label = REQUIRED)
  public String topicId;

  /**
   * 定向回复ID;
   */
  @ProtoField(tag = 2, type = STRING, label = REQUIRED)
  public String replyToId;

  /**
   * 回复内容
   */
  @ProtoField(tag = 3, type = STRING, label = REQUIRED)
  public String replyContent;

  /**
   * 用户ID(可选)
   */
  @ProtoField(tag = 4, type = STRING, label = REQUIRED)
  public String userId;

  public AddTopicReplyRequest(AddTopicReplyRequest message) {
    super(message);
    if (message == null) return;
    this.topicId = message.topicId;
    this.replyToId = message.replyToId;
    this.replyContent = message.replyContent;
    this.userId = message.userId;
  }

  public AddTopicReplyRequest() {
  }

  public AddTopicReplyRequest fillTagValue(int tag, Object value) {
    switch(tag) {
        case TAG_TOPICID:
        this.topicId = (String)value;
        break;
        case TAG_REPLYTOID:
        this.replyToId = (String)value;
        break;
        case TAG_REPLYCONTENT:
        this.replyContent = (String)value;
        break;
        case TAG_USERID:
        this.userId = (String)value;
        break;
        default: break;
        };
    return this;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AddTopicReplyRequest)) return false;
    AddTopicReplyRequest o = (AddTopicReplyRequest) other;
    return equals(topicId, o.topicId)
        && equals(replyToId, o.replyToId)
        && equals(replyContent, o.replyContent)
        && equals(userId, o.userId);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = topicId != null ? topicId.hashCode() : 0;
      result = result * 37 + (replyToId != null ? replyToId.hashCode() : 0);
      result = result * 37 + (replyContent != null ? replyContent.hashCode() : 0);
      result = result * 37 + (userId != null ? userId.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }
}
