// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Topic.pb.h"

@implementation GetTopicListRequest

- (instancetype) init {
  if ((self = [super init])) {
    _topicType = 0;
    _startIndex = 0;
    _columnId = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTopicType) {
    [output writeInt32:1 value:self.topicType];
  }
  if (self.hasStartIndex) {
    [output writeInt32:2 value:self.startIndex];
  }
  if (self.hasColumnId) {
    [output writeString:3 value:self.columnId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasTopicType) {
    size_ += computeInt32Size(1, self.topicType);
  }
  if (self.hasStartIndex) {
    size_ += computeInt32Size(2, self.startIndex);
  }
  if (self.hasColumnId) {
    size_ += computeStringSize(3, self.columnId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GetTopicListRequest*) parseFromData:(NSData*) data {
  GetTopicListRequest* result = [[GetTopicListRequest alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTopicType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"topicType", [NSNumber numberWithInteger:self.topicType]];
  }
  if (self.hasStartIndex) {
    [output appendFormat:@"%@%@: %@\n", indent, @"startIndex", [NSNumber numberWithInteger:self.startIndex]];
  }
  if (self.hasColumnId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"columnId", self.columnId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setTopicType:(SInt32) value {
  _hasTopicType = YES;
  _topicType = value;
}
- (void) setStartIndex:(SInt32) value {
  _hasStartIndex = YES;
  _startIndex = value;
}
- (void) setColumnId:(NSString*) value {
  _hasColumnId = YES;
  _columnId = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 8: {
        [self setTopicType:[input readInt32]];
        break;
      }
      case 16: {
        [self setStartIndex:[input readInt32]];
        break;
      }
      case 26: {
        [self setColumnId:[input readString]];
        break;
      }
    }
  }
}
@end


@implementation GetTopicListResult

- (instancetype) init {
  if ((self = [super init])) {
    _success = NO;
    _resultCode = @"";
    _resultMsg = @"";
    _maxIndex = 0;
    _hasMore = NO;
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSuccess) {
    [output writeBool:1 value:self.success];
  }
  if (self.hasResultCode) {
    [output writeString:2 value:self.resultCode];
  }
  if (self.hasResultMsg) {
    [output writeString:3 value:self.resultMsg];
  }
  [self.topicLiteInfo enumerateObjectsUsingBlock:^(TopicLiteInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:4 value:element];
  }];
  if (self.hasMaxIndex) {
    [output writeInt32:5 value:self.maxIndex];
  }
  if (self.hasHasMore) {
    [output writeBool:6 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasSuccess) {
    size_ += computeBoolSize(1, self.success);
  }
  if (self.hasResultCode) {
    size_ += computeStringSize(2, self.resultCode);
  }
  if (self.hasResultMsg) {
    size_ += computeStringSize(3, self.resultMsg);
  }
  [self.topicLiteInfo enumerateObjectsUsingBlock:^(TopicLiteInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(4, element);
  }];
  if (self.hasMaxIndex) {
    size_ += computeInt32Size(5, self.maxIndex);
  }
  if (self.hasHasMore) {
    size_ += computeBoolSize(6, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GetTopicListResult*) parseFromData:(NSData*) data {
  GetTopicListResult* result = [[GetTopicListResult alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSuccess) {
    [output appendFormat:@"%@%@: %@\n", indent, @"success", [NSNumber numberWithBool:self.success]];
  }
  if (self.hasResultCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultCode", self.resultCode];
  }
  if (self.hasResultMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultMsg", self.resultMsg];
  }
  [self.topicLiteInfo enumerateObjectsUsingBlock:^(TopicLiteInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"topicLiteInfo"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasMaxIndex) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxIndex", [NSNumber numberWithInteger:self.maxIndex]];
  }
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setSuccess:(BOOL) value {
  _hasSuccess = YES;
  _success = value;
}
- (void) setResultCode:(NSString*) value {
  _hasResultCode = YES;
  _resultCode = value;
}
- (void) setResultMsg:(NSString*) value {
  _hasResultMsg = YES;
  _resultMsg = value;
}
- (void)setTopicLiteInfoArray:(NSArray *)array {
  _topicLiteInfo = [[NSMutableArray alloc]initWithArray:array];
}
- (void)addTopicLiteInfo:(TopicLiteInfo*)value {
  if (_topicLiteInfo == nil) {
    _topicLiteInfo = [[NSMutableArray alloc]init];
  }
  [_topicLiteInfo addObject:value];
}
- (void) setMaxIndex:(SInt32) value {
  _hasMaxIndex = YES;
  _maxIndex = value;
}
- (void) setHasMore:(BOOL) value {
  _hasHasMore = YES;
  _hasMore = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 8: {
        [self setSuccess:[input readBool]];
        break;
      }
      case 18: {
        [self setResultCode:[input readString]];
        break;
      }
      case 26: {
        [self setResultMsg:[input readString]];
        break;
      }
      case 34: {
        TopicLiteInfo* sub = [[TopicLiteInfo alloc] init];
        [input readQJMessage:sub extensionRegistry:extensionRegistry];
        [self addTopicLiteInfo:sub];
        break;
      }
      case 40: {
        [self setMaxIndex:[input readInt32]];
        break;
      }
      case 48: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
@end


@implementation TopicLiteInfo

- (instancetype) init {
  if ((self = [super init])) {
    _topicId = @"";
    _topicType = 0;
    _setTop = NO;
    _topicTitle = @"";
    _topicDesc = @"";
    _readCount = 0L;
    _praiseCount = 0L;
    _replyCount = 0L;
    _createTime = 0L;
    _lastReplyTime = 0L;
    _praised = NO;
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTopicId) {
    [output writeString:1 value:self.topicId];
  }
  if (self.hasTopicType) {
    [output writeInt32:2 value:self.topicType];
  }
  if (self.hasSetTop) {
    [output writeBool:3 value:self.setTop];
  }
  if (self.hasTopicTitle) {
    [output writeString:4 value:self.topicTitle];
  }
  if (self.hasTopicDesc) {
    [output writeString:5 value:self.topicDesc];
  }
  if (self.hasReadCount) {
    [output writeInt64:6 value:self.readCount];
  }
  if (self.hasPraiseCount) {
    [output writeInt64:7 value:self.praiseCount];
  }
  if (self.hasReplyCount) {
    [output writeInt64:8 value:self.replyCount];
  }
  if (self.hasCreateTime) {
    [output writeInt64:9 value:self.createTime];
  }
  if (self.hasLastReplyTime) {
    [output writeInt64:10 value:self.lastReplyTime];
  }
  if (self.hasPraised) {
    [output writeBool:11 value:self.praised];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasTopicId) {
    size_ += computeStringSize(1, self.topicId);
  }
  if (self.hasTopicType) {
    size_ += computeInt32Size(2, self.topicType);
  }
  if (self.hasSetTop) {
    size_ += computeBoolSize(3, self.setTop);
  }
  if (self.hasTopicTitle) {
    size_ += computeStringSize(4, self.topicTitle);
  }
  if (self.hasTopicDesc) {
    size_ += computeStringSize(5, self.topicDesc);
  }
  if (self.hasReadCount) {
    size_ += computeInt64Size(6, self.readCount);
  }
  if (self.hasPraiseCount) {
    size_ += computeInt64Size(7, self.praiseCount);
  }
  if (self.hasReplyCount) {
    size_ += computeInt64Size(8, self.replyCount);
  }
  if (self.hasCreateTime) {
    size_ += computeInt64Size(9, self.createTime);
  }
  if (self.hasLastReplyTime) {
    size_ += computeInt64Size(10, self.lastReplyTime);
  }
  if (self.hasPraised) {
    size_ += computeBoolSize(11, self.praised);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TopicLiteInfo*) parseFromData:(NSData*) data {
  TopicLiteInfo* result = [[TopicLiteInfo alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTopicId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"topicId", self.topicId];
  }
  if (self.hasTopicType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"topicType", [NSNumber numberWithInteger:self.topicType]];
  }
  if (self.hasSetTop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"setTop", [NSNumber numberWithBool:self.setTop]];
  }
  if (self.hasTopicTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"topicTitle", self.topicTitle];
  }
  if (self.hasTopicDesc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"topicDesc", self.topicDesc];
  }
  if (self.hasReadCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"readCount", [NSNumber numberWithLongLong:self.readCount]];
  }
  if (self.hasPraiseCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"praiseCount", [NSNumber numberWithLongLong:self.praiseCount]];
  }
  if (self.hasReplyCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"replyCount", [NSNumber numberWithLongLong:self.replyCount]];
  }
  if (self.hasCreateTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createTime", [NSNumber numberWithLongLong:self.createTime]];
  }
  if (self.hasLastReplyTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastReplyTime", [NSNumber numberWithLongLong:self.lastReplyTime]];
  }
  if (self.hasPraised) {
    [output appendFormat:@"%@%@: %@\n", indent, @"praised", [NSNumber numberWithBool:self.praised]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setTopicId:(NSString*) value {
  _hasTopicId = YES;
  _topicId = value;
}
- (void) setTopicType:(SInt32) value {
  _hasTopicType = YES;
  _topicType = value;
}
- (void) setSetTop:(BOOL) value {
  _hasSetTop = YES;
  _setTop = value;
}
- (void) setTopicTitle:(NSString*) value {
  _hasTopicTitle = YES;
  _topicTitle = value;
}
- (void) setTopicDesc:(NSString*) value {
  _hasTopicDesc = YES;
  _topicDesc = value;
}
- (void) setReadCount:(SInt64) value {
  _hasReadCount = YES;
  _readCount = value;
}
- (void) setPraiseCount:(SInt64) value {
  _hasPraiseCount = YES;
  _praiseCount = value;
}
- (void) setReplyCount:(SInt64) value {
  _hasReplyCount = YES;
  _replyCount = value;
}
- (void) setCreateTime:(SInt64) value {
  _hasCreateTime = YES;
  _createTime = value;
}
- (void) setLastReplyTime:(SInt64) value {
  _hasLastReplyTime = YES;
  _lastReplyTime = value;
}
- (void) setPraised:(BOOL) value {
  _hasPraised = YES;
  _praised = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self setTopicId:[input readString]];
        break;
      }
      case 16: {
        [self setTopicType:[input readInt32]];
        break;
      }
      case 24: {
        [self setSetTop:[input readBool]];
        break;
      }
      case 34: {
        [self setTopicTitle:[input readString]];
        break;
      }
      case 42: {
        [self setTopicDesc:[input readString]];
        break;
      }
      case 48: {
        [self setReadCount:[input readInt64]];
        break;
      }
      case 56: {
        [self setPraiseCount:[input readInt64]];
        break;
      }
      case 64: {
        [self setReplyCount:[input readInt64]];
        break;
      }
      case 72: {
        [self setCreateTime:[input readInt64]];
        break;
      }
      case 80: {
        [self setLastReplyTime:[input readInt64]];
        break;
      }
      case 88: {
        [self setPraised:[input readBool]];
        break;
      }
    }
  }
}
@end


@implementation GetTopicDetailRequest

- (instancetype) init {
  if ((self = [super init])) {
    _topicId = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTopicId) {
    [output writeString:1 value:self.topicId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasTopicId) {
    size_ += computeStringSize(1, self.topicId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GetTopicDetailRequest*) parseFromData:(NSData*) data {
  GetTopicDetailRequest* result = [[GetTopicDetailRequest alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTopicId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"topicId", self.topicId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setTopicId:(NSString*) value {
  _hasTopicId = YES;
  _topicId = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self setTopicId:[input readString]];
        break;
      }
    }
  }
}
@end


@implementation GetTopicDetailResult

- (instancetype) init {
  if ((self = [super init])) {
    _success = NO;
    _resultCode = @"";
    _resultMsg = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSuccess) {
    [output writeBool:1 value:self.success];
  }
  if (self.hasResultCode) {
    [output writeString:2 value:self.resultCode];
  }
  if (self.hasResultMsg) {
    [output writeString:3 value:self.resultMsg];
  }
  if (self.hasTopicDetailInfo) {
    [output writeMessage:4 value:self.topicDetailInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasSuccess) {
    size_ += computeBoolSize(1, self.success);
  }
  if (self.hasResultCode) {
    size_ += computeStringSize(2, self.resultCode);
  }
  if (self.hasResultMsg) {
    size_ += computeStringSize(3, self.resultMsg);
  }
  if (self.hasTopicDetailInfo) {
    size_ += computeMessageSize(4, self.topicDetailInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GetTopicDetailResult*) parseFromData:(NSData*) data {
  GetTopicDetailResult* result = [[GetTopicDetailResult alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSuccess) {
    [output appendFormat:@"%@%@: %@\n", indent, @"success", [NSNumber numberWithBool:self.success]];
  }
  if (self.hasResultCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultCode", self.resultCode];
  }
  if (self.hasResultMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultMsg", self.resultMsg];
  }
  if (self.hasTopicDetailInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"topicDetailInfo"];
    [self.topicDetailInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setSuccess:(BOOL) value {
  _hasSuccess = YES;
  _success = value;
}
- (void) setResultCode:(NSString*) value {
  _hasResultCode = YES;
  _resultCode = value;
}
- (void) setResultMsg:(NSString*) value {
  _hasResultMsg = YES;
  _resultMsg = value;
}
- (void) setTopicDetailInfo:(TopicDetailInfo*) value {
  _hasTopicDetailInfo = YES;
  _topicDetailInfo = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 8: {
        [self setSuccess:[input readBool]];
        break;
      }
      case 18: {
        [self setResultCode:[input readString]];
        break;
      }
      case 26: {
        [self setResultMsg:[input readString]];
        break;
      }
      case 34: {
        TopicDetailInfo* sub = [[TopicDetailInfo alloc] init];
        [input readQJMessage:sub extensionRegistry:extensionRegistry];
        [self setTopicDetailInfo:sub];
        break;
      }
    }
  }
}
@end


@implementation TopicDetailInfo

- (instancetype) init {
  if ((self = [super init])) {
    _topicId = @"";
    _topicType = 0;
    _setTop = NO;
    _topicTitle = @"";
    _topicDesc = @"";
    _topicContent = @"";
    _readCount = 0L;
    _praiseCount = 0L;
    _replyCount = 0L;
    _createTime = 0L;
    _lastReplyTime = 0L;
    _praised = NO;
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTopicId) {
    [output writeString:1 value:self.topicId];
  }
  if (self.hasTopicType) {
    [output writeInt32:2 value:self.topicType];
  }
  if (self.hasSetTop) {
    [output writeBool:3 value:self.setTop];
  }
  if (self.hasTopicTitle) {
    [output writeString:4 value:self.topicTitle];
  }
  if (self.hasTopicDesc) {
    [output writeString:5 value:self.topicDesc];
  }
  if (self.hasTopicContent) {
    [output writeString:6 value:self.topicContent];
  }
  if (self.hasReadCount) {
    [output writeInt64:7 value:self.readCount];
  }
  if (self.hasPraiseCount) {
    [output writeInt64:8 value:self.praiseCount];
  }
  if (self.hasReplyCount) {
    [output writeInt64:9 value:self.replyCount];
  }
  if (self.hasCreateTime) {
    [output writeInt64:10 value:self.createTime];
  }
  if (self.hasLastReplyTime) {
    [output writeInt64:11 value:self.lastReplyTime];
  }
  [self.praiseHeadIconUrls enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:12 value:element];
  }];
  [self.topicReplyInfo enumerateObjectsUsingBlock:^(TopicReplyInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:13 value:element];
  }];
  if (self.hasPraised) {
    [output writeBool:14 value:self.praised];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasTopicId) {
    size_ += computeStringSize(1, self.topicId);
  }
  if (self.hasTopicType) {
    size_ += computeInt32Size(2, self.topicType);
  }
  if (self.hasSetTop) {
    size_ += computeBoolSize(3, self.setTop);
  }
  if (self.hasTopicTitle) {
    size_ += computeStringSize(4, self.topicTitle);
  }
  if (self.hasTopicDesc) {
    size_ += computeStringSize(5, self.topicDesc);
  }
  if (self.hasTopicContent) {
    size_ += computeStringSize(6, self.topicContent);
  }
  if (self.hasReadCount) {
    size_ += computeInt64Size(7, self.readCount);
  }
  if (self.hasPraiseCount) {
    size_ += computeInt64Size(8, self.praiseCount);
  }
  if (self.hasReplyCount) {
    size_ += computeInt64Size(9, self.replyCount);
  }
  if (self.hasCreateTime) {
    size_ += computeInt64Size(10, self.createTime);
  }
  if (self.hasLastReplyTime) {
    size_ += computeInt64Size(11, self.lastReplyTime);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.praiseHeadIconUrls.count;
    [self.praiseHeadIconUrls enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  [self.topicReplyInfo enumerateObjectsUsingBlock:^(TopicReplyInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(13, element);
  }];
  if (self.hasPraised) {
    size_ += computeBoolSize(14, self.praised);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TopicDetailInfo*) parseFromData:(NSData*) data {
  TopicDetailInfo* result = [[TopicDetailInfo alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTopicId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"topicId", self.topicId];
  }
  if (self.hasTopicType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"topicType", [NSNumber numberWithInteger:self.topicType]];
  }
  if (self.hasSetTop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"setTop", [NSNumber numberWithBool:self.setTop]];
  }
  if (self.hasTopicTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"topicTitle", self.topicTitle];
  }
  if (self.hasTopicDesc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"topicDesc", self.topicDesc];
  }
  if (self.hasTopicContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"topicContent", self.topicContent];
  }
  if (self.hasReadCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"readCount", [NSNumber numberWithLongLong:self.readCount]];
  }
  if (self.hasPraiseCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"praiseCount", [NSNumber numberWithLongLong:self.praiseCount]];
  }
  if (self.hasReplyCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"replyCount", [NSNumber numberWithLongLong:self.replyCount]];
  }
  if (self.hasCreateTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createTime", [NSNumber numberWithLongLong:self.createTime]];
  }
  if (self.hasLastReplyTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastReplyTime", [NSNumber numberWithLongLong:self.lastReplyTime]];
  }
  [self.praiseHeadIconUrls enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"praiseHeadIconUrls", obj];
  }];
  [self.topicReplyInfo enumerateObjectsUsingBlock:^(TopicReplyInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"topicReplyInfo"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasPraised) {
    [output appendFormat:@"%@%@: %@\n", indent, @"praised", [NSNumber numberWithBool:self.praised]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setTopicId:(NSString*) value {
  _hasTopicId = YES;
  _topicId = value;
}
- (void) setTopicType:(SInt32) value {
  _hasTopicType = YES;
  _topicType = value;
}
- (void) setSetTop:(BOOL) value {
  _hasSetTop = YES;
  _setTop = value;
}
- (void) setTopicTitle:(NSString*) value {
  _hasTopicTitle = YES;
  _topicTitle = value;
}
- (void) setTopicDesc:(NSString*) value {
  _hasTopicDesc = YES;
  _topicDesc = value;
}
- (void) setTopicContent:(NSString*) value {
  _hasTopicContent = YES;
  _topicContent = value;
}
- (void) setReadCount:(SInt64) value {
  _hasReadCount = YES;
  _readCount = value;
}
- (void) setPraiseCount:(SInt64) value {
  _hasPraiseCount = YES;
  _praiseCount = value;
}
- (void) setReplyCount:(SInt64) value {
  _hasReplyCount = YES;
  _replyCount = value;
}
- (void) setCreateTime:(SInt64) value {
  _hasCreateTime = YES;
  _createTime = value;
}
- (void) setLastReplyTime:(SInt64) value {
  _hasLastReplyTime = YES;
  _lastReplyTime = value;
}
- (void)setPraiseHeadIconUrlsArray:(NSArray *)array {
  _praiseHeadIconUrls = [[NSMutableArray alloc] initWithArray:array];
}
- (void)addPraiseHeadIconUrls:(NSString*)value {
  if (_praiseHeadIconUrls == nil) {
    _praiseHeadIconUrls = [[NSMutableArray alloc]init];
  }
  [_praiseHeadIconUrls addObject:value];
}
- (void)setTopicReplyInfoArray:(NSArray *)array {
  _topicReplyInfo = [[NSMutableArray alloc]initWithArray:array];
}
- (void)addTopicReplyInfo:(TopicReplyInfo*)value {
  if (_topicReplyInfo == nil) {
    _topicReplyInfo = [[NSMutableArray alloc]init];
  }
  [_topicReplyInfo addObject:value];
}
- (void) setPraised:(BOOL) value {
  _hasPraised = YES;
  _praised = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self setTopicId:[input readString]];
        break;
      }
      case 16: {
        [self setTopicType:[input readInt32]];
        break;
      }
      case 24: {
        [self setSetTop:[input readBool]];
        break;
      }
      case 34: {
        [self setTopicTitle:[input readString]];
        break;
      }
      case 42: {
        [self setTopicDesc:[input readString]];
        break;
      }
      case 50: {
        [self setTopicContent:[input readString]];
        break;
      }
      case 56: {
        [self setReadCount:[input readInt64]];
        break;
      }
      case 64: {
        [self setPraiseCount:[input readInt64]];
        break;
      }
      case 72: {
        [self setReplyCount:[input readInt64]];
        break;
      }
      case 80: {
        [self setCreateTime:[input readInt64]];
        break;
      }
      case 88: {
        [self setLastReplyTime:[input readInt64]];
        break;
      }
      case 98: {
        [self addPraiseHeadIconUrls:[input readString]];
        break;
      }
      case 106: {
        TopicReplyInfo* sub = [[TopicReplyInfo alloc] init];
        [input readQJMessage:sub extensionRegistry:extensionRegistry];
        [self addTopicReplyInfo:sub];
        break;
      }
      case 112: {
        [self setPraised:[input readBool]];
        break;
      }
    }
  }
}
@end


@implementation TopicReplyInfo

- (instancetype) init {
  if ((self = [super init])) {
    _replyId = @"";
    _replyUserId = @"";
    _replyNickName = @"";
    _replyUserHeadIconUrl = @"";
    _replyToUserId = @"";
    _replyToNickName = @"";
    _replyContent = @"";
    _replyTime = 0L;
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasReplyId) {
    [output writeString:1 value:self.replyId];
  }
  if (self.hasReplyUserId) {
    [output writeString:2 value:self.replyUserId];
  }
  if (self.hasReplyNickName) {
    [output writeString:3 value:self.replyNickName];
  }
  if (self.hasReplyUserHeadIconUrl) {
    [output writeString:4 value:self.replyUserHeadIconUrl];
  }
  if (self.hasReplyToUserId) {
    [output writeString:5 value:self.replyToUserId];
  }
  if (self.hasReplyToNickName) {
    [output writeString:6 value:self.replyToNickName];
  }
  if (self.hasReplyContent) {
    [output writeString:7 value:self.replyContent];
  }
  if (self.hasReplyTime) {
    [output writeInt64:8 value:self.replyTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasReplyId) {
    size_ += computeStringSize(1, self.replyId);
  }
  if (self.hasReplyUserId) {
    size_ += computeStringSize(2, self.replyUserId);
  }
  if (self.hasReplyNickName) {
    size_ += computeStringSize(3, self.replyNickName);
  }
  if (self.hasReplyUserHeadIconUrl) {
    size_ += computeStringSize(4, self.replyUserHeadIconUrl);
  }
  if (self.hasReplyToUserId) {
    size_ += computeStringSize(5, self.replyToUserId);
  }
  if (self.hasReplyToNickName) {
    size_ += computeStringSize(6, self.replyToNickName);
  }
  if (self.hasReplyContent) {
    size_ += computeStringSize(7, self.replyContent);
  }
  if (self.hasReplyTime) {
    size_ += computeInt64Size(8, self.replyTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TopicReplyInfo*) parseFromData:(NSData*) data {
  TopicReplyInfo* result = [[TopicReplyInfo alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasReplyId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"replyId", self.replyId];
  }
  if (self.hasReplyUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"replyUserId", self.replyUserId];
  }
  if (self.hasReplyNickName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"replyNickName", self.replyNickName];
  }
  if (self.hasReplyUserHeadIconUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"replyUserHeadIconUrl", self.replyUserHeadIconUrl];
  }
  if (self.hasReplyToUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"replyToUserId", self.replyToUserId];
  }
  if (self.hasReplyToNickName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"replyToNickName", self.replyToNickName];
  }
  if (self.hasReplyContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"replyContent", self.replyContent];
  }
  if (self.hasReplyTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"replyTime", [NSNumber numberWithLongLong:self.replyTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setReplyId:(NSString*) value {
  _hasReplyId = YES;
  _replyId = value;
}
- (void) setReplyUserId:(NSString*) value {
  _hasReplyUserId = YES;
  _replyUserId = value;
}
- (void) setReplyNickName:(NSString*) value {
  _hasReplyNickName = YES;
  _replyNickName = value;
}
- (void) setReplyUserHeadIconUrl:(NSString*) value {
  _hasReplyUserHeadIconUrl = YES;
  _replyUserHeadIconUrl = value;
}
- (void) setReplyToUserId:(NSString*) value {
  _hasReplyToUserId = YES;
  _replyToUserId = value;
}
- (void) setReplyToNickName:(NSString*) value {
  _hasReplyToNickName = YES;
  _replyToNickName = value;
}
- (void) setReplyContent:(NSString*) value {
  _hasReplyContent = YES;
  _replyContent = value;
}
- (void) setReplyTime:(SInt64) value {
  _hasReplyTime = YES;
  _replyTime = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self setReplyId:[input readString]];
        break;
      }
      case 18: {
        [self setReplyUserId:[input readString]];
        break;
      }
      case 26: {
        [self setReplyNickName:[input readString]];
        break;
      }
      case 34: {
        [self setReplyUserHeadIconUrl:[input readString]];
        break;
      }
      case 42: {
        [self setReplyToUserId:[input readString]];
        break;
      }
      case 50: {
        [self setReplyToNickName:[input readString]];
        break;
      }
      case 58: {
        [self setReplyContent:[input readString]];
        break;
      }
      case 64: {
        [self setReplyTime:[input readInt64]];
        break;
      }
    }
  }
}
@end


@implementation AddTopicPraiseRequest

- (instancetype) init {
  if ((self = [super init])) {
    _topicId = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTopicId) {
    [output writeString:1 value:self.topicId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasTopicId) {
    size_ += computeStringSize(1, self.topicId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AddTopicPraiseRequest*) parseFromData:(NSData*) data {
  AddTopicPraiseRequest* result = [[AddTopicPraiseRequest alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTopicId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"topicId", self.topicId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setTopicId:(NSString*) value {
  _hasTopicId = YES;
  _topicId = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self setTopicId:[input readString]];
        break;
      }
    }
  }
}
@end


@implementation AddTopicPraiseResult

- (instancetype) init {
  if ((self = [super init])) {
    _success = NO;
    _resultCode = @"";
    _resultMsg = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSuccess) {
    [output writeBool:1 value:self.success];
  }
  if (self.hasResultCode) {
    [output writeString:2 value:self.resultCode];
  }
  if (self.hasResultMsg) {
    [output writeString:3 value:self.resultMsg];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasSuccess) {
    size_ += computeBoolSize(1, self.success);
  }
  if (self.hasResultCode) {
    size_ += computeStringSize(2, self.resultCode);
  }
  if (self.hasResultMsg) {
    size_ += computeStringSize(3, self.resultMsg);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AddTopicPraiseResult*) parseFromData:(NSData*) data {
  AddTopicPraiseResult* result = [[AddTopicPraiseResult alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSuccess) {
    [output appendFormat:@"%@%@: %@\n", indent, @"success", [NSNumber numberWithBool:self.success]];
  }
  if (self.hasResultCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultCode", self.resultCode];
  }
  if (self.hasResultMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultMsg", self.resultMsg];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setSuccess:(BOOL) value {
  _hasSuccess = YES;
  _success = value;
}
- (void) setResultCode:(NSString*) value {
  _hasResultCode = YES;
  _resultCode = value;
}
- (void) setResultMsg:(NSString*) value {
  _hasResultMsg = YES;
  _resultMsg = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 8: {
        [self setSuccess:[input readBool]];
        break;
      }
      case 18: {
        [self setResultCode:[input readString]];
        break;
      }
      case 26: {
        [self setResultMsg:[input readString]];
        break;
      }
    }
  }
}
@end


@implementation CancelTopicPraiseRequest

- (instancetype) init {
  if ((self = [super init])) {
    _topicId = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTopicId) {
    [output writeString:1 value:self.topicId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasTopicId) {
    size_ += computeStringSize(1, self.topicId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CancelTopicPraiseRequest*) parseFromData:(NSData*) data {
  CancelTopicPraiseRequest* result = [[CancelTopicPraiseRequest alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTopicId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"topicId", self.topicId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setTopicId:(NSString*) value {
  _hasTopicId = YES;
  _topicId = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self setTopicId:[input readString]];
        break;
      }
    }
  }
}
@end


@implementation CancelTopicPraiseResult

- (instancetype) init {
  if ((self = [super init])) {
    _success = NO;
    _resultCode = @"";
    _resultMsg = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSuccess) {
    [output writeBool:1 value:self.success];
  }
  if (self.hasResultCode) {
    [output writeString:2 value:self.resultCode];
  }
  if (self.hasResultMsg) {
    [output writeString:3 value:self.resultMsg];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasSuccess) {
    size_ += computeBoolSize(1, self.success);
  }
  if (self.hasResultCode) {
    size_ += computeStringSize(2, self.resultCode);
  }
  if (self.hasResultMsg) {
    size_ += computeStringSize(3, self.resultMsg);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CancelTopicPraiseResult*) parseFromData:(NSData*) data {
  CancelTopicPraiseResult* result = [[CancelTopicPraiseResult alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSuccess) {
    [output appendFormat:@"%@%@: %@\n", indent, @"success", [NSNumber numberWithBool:self.success]];
  }
  if (self.hasResultCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultCode", self.resultCode];
  }
  if (self.hasResultMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultMsg", self.resultMsg];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setSuccess:(BOOL) value {
  _hasSuccess = YES;
  _success = value;
}
- (void) setResultCode:(NSString*) value {
  _hasResultCode = YES;
  _resultCode = value;
}
- (void) setResultMsg:(NSString*) value {
  _hasResultMsg = YES;
  _resultMsg = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 8: {
        [self setSuccess:[input readBool]];
        break;
      }
      case 18: {
        [self setResultCode:[input readString]];
        break;
      }
      case 26: {
        [self setResultMsg:[input readString]];
        break;
      }
    }
  }
}
@end


@implementation AddTopicReplyRequest

- (instancetype) init {
  if ((self = [super init])) {
    _topicId = @"";
    _replyToId = @"";
    _replyContent = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTopicId) {
    [output writeString:1 value:self.topicId];
  }
  if (self.hasReplyToId) {
    [output writeString:2 value:self.replyToId];
  }
  if (self.hasReplyContent) {
    [output writeString:3 value:self.replyContent];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasTopicId) {
    size_ += computeStringSize(1, self.topicId);
  }
  if (self.hasReplyToId) {
    size_ += computeStringSize(2, self.replyToId);
  }
  if (self.hasReplyContent) {
    size_ += computeStringSize(3, self.replyContent);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AddTopicReplyRequest*) parseFromData:(NSData*) data {
  AddTopicReplyRequest* result = [[AddTopicReplyRequest alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTopicId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"topicId", self.topicId];
  }
  if (self.hasReplyToId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"replyToId", self.replyToId];
  }
  if (self.hasReplyContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"replyContent", self.replyContent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setTopicId:(NSString*) value {
  _hasTopicId = YES;
  _topicId = value;
}
- (void) setReplyToId:(NSString*) value {
  _hasReplyToId = YES;
  _replyToId = value;
}
- (void) setReplyContent:(NSString*) value {
  _hasReplyContent = YES;
  _replyContent = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self setTopicId:[input readString]];
        break;
      }
      case 18: {
        [self setReplyToId:[input readString]];
        break;
      }
      case 26: {
        [self setReplyContent:[input readString]];
        break;
      }
    }
  }
}
@end


@implementation AddTopicReplyResult

- (instancetype) init {
  if ((self = [super init])) {
    _success = NO;
    _resultCode = @"";
    _resultMsg = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSuccess) {
    [output writeBool:1 value:self.success];
  }
  if (self.hasResultCode) {
    [output writeString:2 value:self.resultCode];
  }
  if (self.hasResultMsg) {
    [output writeString:3 value:self.resultMsg];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasSuccess) {
    size_ += computeBoolSize(1, self.success);
  }
  if (self.hasResultCode) {
    size_ += computeStringSize(2, self.resultCode);
  }
  if (self.hasResultMsg) {
    size_ += computeStringSize(3, self.resultMsg);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AddTopicReplyResult*) parseFromData:(NSData*) data {
  AddTopicReplyResult* result = [[AddTopicReplyResult alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSuccess) {
    [output appendFormat:@"%@%@: %@\n", indent, @"success", [NSNumber numberWithBool:self.success]];
  }
  if (self.hasResultCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultCode", self.resultCode];
  }
  if (self.hasResultMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultMsg", self.resultMsg];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setSuccess:(BOOL) value {
  _hasSuccess = YES;
  _success = value;
}
- (void) setResultCode:(NSString*) value {
  _hasResultCode = YES;
  _resultCode = value;
}
- (void) setResultMsg:(NSString*) value {
  _hasResultMsg = YES;
  _resultMsg = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 8: {
        [self setSuccess:[input readBool]];
        break;
      }
      case 18: {
        [self setResultCode:[input readString]];
        break;
      }
      case 26: {
        [self setResultMsg:[input readString]];
        break;
      }
    }
  }
}
@end


