// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Login.pb.h"

@implementation LoginRequest

- (instancetype) init {
  if ((self = [super init])) {
    _loginId = @"";
    _password = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLoginId) {
    [output writeString:1 value:self.loginId];
  }
  if (self.hasPassword) {
    [output writeString:2 value:self.password];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasLoginId) {
    size_ += computeStringSize(1, self.loginId);
  }
  if (self.hasPassword) {
    size_ += computeStringSize(2, self.password);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (LoginRequest*) parseFromData:(NSData*) data {
  LoginRequest* result = [[LoginRequest alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasLoginId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"loginId", self.loginId];
  }
  if (self.hasPassword) {
    [output appendFormat:@"%@%@: %@\n", indent, @"password", self.password];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setLoginId:(NSString*) value {
  _hasLoginId = YES;
  _loginId = value;
}
- (void) setPassword:(NSString*) value {
  _hasPassword = YES;
  _password = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self setLoginId:[input readString]];
        break;
      }
      case 18: {
        [self setPassword:[input readString]];
        break;
      }
    }
  }
}
@end


@implementation LoginResult

- (instancetype) init {
  if ((self = [super init])) {
    _resultCode = @"";
    _resultMsg = @"";
    _sessionId = @"";
    _userId = @"";
    _headIconUrl = @"";
    _mobileNo = @"";
    _userName = @"";
    _nickName = @"";
    _recommendCode = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResultCode) {
    [output writeString:1 value:self.resultCode];
  }
  if (self.hasResultMsg) {
    [output writeString:2 value:self.resultMsg];
  }
  if (self.hasSessionId) {
    [output writeString:3 value:self.sessionId];
  }
  if (self.hasUserId) {
    [output writeString:4 value:self.userId];
  }
  if (self.hasHeadIconUrl) {
    [output writeString:5 value:self.headIconUrl];
  }
  if (self.hasMobileNo) {
    [output writeString:6 value:self.mobileNo];
  }
  if (self.hasUserName) {
    [output writeString:7 value:self.userName];
  }
  if (self.hasNickName) {
    [output writeString:8 value:self.nickName];
  }
  if (self.hasRecommendCode) {
    [output writeString:9 value:self.recommendCode];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasResultCode) {
    size_ += computeStringSize(1, self.resultCode);
  }
  if (self.hasResultMsg) {
    size_ += computeStringSize(2, self.resultMsg);
  }
  if (self.hasSessionId) {
    size_ += computeStringSize(3, self.sessionId);
  }
  if (self.hasUserId) {
    size_ += computeStringSize(4, self.userId);
  }
  if (self.hasHeadIconUrl) {
    size_ += computeStringSize(5, self.headIconUrl);
  }
  if (self.hasMobileNo) {
    size_ += computeStringSize(6, self.mobileNo);
  }
  if (self.hasUserName) {
    size_ += computeStringSize(7, self.userName);
  }
  if (self.hasNickName) {
    size_ += computeStringSize(8, self.nickName);
  }
  if (self.hasRecommendCode) {
    size_ += computeStringSize(9, self.recommendCode);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (LoginResult*) parseFromData:(NSData*) data {
  LoginResult* result = [[LoginResult alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasResultCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultCode", self.resultCode];
  }
  if (self.hasResultMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultMsg", self.resultMsg];
  }
  if (self.hasSessionId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sessionId", self.sessionId];
  }
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", self.userId];
  }
  if (self.hasHeadIconUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"headIconUrl", self.headIconUrl];
  }
  if (self.hasMobileNo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mobileNo", self.mobileNo];
  }
  if (self.hasUserName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userName", self.userName];
  }
  if (self.hasNickName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"nickName", self.nickName];
  }
  if (self.hasRecommendCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"recommendCode", self.recommendCode];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setResultCode:(NSString*) value {
  _hasResultCode = YES;
  _resultCode = value;
}
- (void) setResultMsg:(NSString*) value {
  _hasResultMsg = YES;
  _resultMsg = value;
}
- (void) setSessionId:(NSString*) value {
  _hasSessionId = YES;
  _sessionId = value;
}
- (void) setUserId:(NSString*) value {
  _hasUserId = YES;
  _userId = value;
}
- (void) setHeadIconUrl:(NSString*) value {
  _hasHeadIconUrl = YES;
  _headIconUrl = value;
}
- (void) setMobileNo:(NSString*) value {
  _hasMobileNo = YES;
  _mobileNo = value;
}
- (void) setUserName:(NSString*) value {
  _hasUserName = YES;
  _userName = value;
}
- (void) setNickName:(NSString*) value {
  _hasNickName = YES;
  _nickName = value;
}
- (void) setRecommendCode:(NSString*) value {
  _hasRecommendCode = YES;
  _recommendCode = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self setResultCode:[input readString]];
        break;
      }
      case 18: {
        [self setResultMsg:[input readString]];
        break;
      }
      case 26: {
        [self setSessionId:[input readString]];
        break;
      }
      case 34: {
        [self setUserId:[input readString]];
        break;
      }
      case 42: {
        [self setHeadIconUrl:[input readString]];
        break;
      }
      case 50: {
        [self setMobileNo:[input readString]];
        break;
      }
      case 58: {
        [self setUserName:[input readString]];
        break;
      }
      case 66: {
        [self setNickName:[input readString]];
        break;
      }
      case 74: {
        [self setRecommendCode:[input readString]];
        break;
      }
    }
  }
}
@end


