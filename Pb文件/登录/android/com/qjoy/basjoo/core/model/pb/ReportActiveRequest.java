// Code generated by Wire-Lite protocol buffer compiler, do not edit.
// Source file: ///home/admin/protobuf/src/2717d4d7f8ee4b16e044dea1889a3220/proto/Login
package com.qjoy.basjoo.core.model.pb;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.STRING;

/**
 * 报活请求
 */
public final class ReportActiveRequest extends Message {

  public static final int TAG_USERID = 1;
  public static final int TAG_SESSIONID = 2;
  public static final int TAG_CLIENTINFO = 3;

  public static final String DEFAULT_USERID = "";
  public static final String DEFAULT_SESSIONID = "";

  /**
   * 用户ID
   */
  @ProtoField(tag = 1, type = STRING)
  public String userId;

  /**
   * sessionID
   */
  @ProtoField(tag = 2, type = STRING)
  public String sessionId;

  /**
   * 客户端信息
   */
  @ProtoField(tag = 3)
  public ClientInfo clientInfo;

  public ReportActiveRequest(ReportActiveRequest message) {
    super(message);
    if (message == null) return;
    this.userId = message.userId;
    this.sessionId = message.sessionId;
    this.clientInfo = message.clientInfo;
  }

  public ReportActiveRequest() {
  }

  public ReportActiveRequest fillTagValue(int tag, Object value) {
    switch(tag) {
        case TAG_USERID:
        this.userId = (String)value;
        break;
        case TAG_SESSIONID:
        this.sessionId = (String)value;
        break;
        case TAG_CLIENTINFO:
        this.clientInfo = (ClientInfo)value;
        break;
        default: break;
        };
    return this;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ReportActiveRequest)) return false;
    ReportActiveRequest o = (ReportActiveRequest) other;
    return equals(userId, o.userId)
        && equals(sessionId, o.sessionId)
        && equals(clientInfo, o.clientInfo);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = userId != null ? userId.hashCode() : 0;
      result = result * 37 + (sessionId != null ? sessionId.hashCode() : 0);
      result = result * 37 + (clientInfo != null ? clientInfo.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }
}
