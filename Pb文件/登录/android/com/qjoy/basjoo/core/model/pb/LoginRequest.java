// Code generated by Wire-Lite protocol buffer compiler, do not edit.
// Source file: ///home/admin/protobuf/src/2717d4d7f8ee4b16e044dea1889a3220/proto/Login
package com.qjoy.basjoo.core.model.pb;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * 登录请求
 */
public final class LoginRequest extends Message {

  public static final int TAG_LOGINID = 1;
  public static final int TAG_PASSWORD = 2;
  public static final int TAG_CLIENTINFO = 3;

  public static final String DEFAULT_LOGINID = "";
  public static final String DEFAULT_PASSWORD = "";

  /**
   * 登录ID，一期只有手机号，后续可能会有email，或者其他类型账号
   */
  @ProtoField(tag = 1, type = STRING, label = REQUIRED)
  public String loginId;

  /**
   * 密码
   */
  @ProtoField(tag = 2, type = STRING, label = REQUIRED)
  public String password;

  /**
   * 客户端信息
   */
  @ProtoField(tag = 3)
  public ClientInfo clientInfo;

  public LoginRequest(LoginRequest message) {
    super(message);
    if (message == null) return;
    this.loginId = message.loginId;
    this.password = message.password;
    this.clientInfo = message.clientInfo;
  }

  public LoginRequest() {
  }

  public LoginRequest fillTagValue(int tag, Object value) {
    switch(tag) {
        case TAG_LOGINID:
        this.loginId = (String)value;
        break;
        case TAG_PASSWORD:
        this.password = (String)value;
        break;
        case TAG_CLIENTINFO:
        this.clientInfo = (ClientInfo)value;
        break;
        default: break;
        };
    return this;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof LoginRequest)) return false;
    LoginRequest o = (LoginRequest) other;
    return equals(loginId, o.loginId)
        && equals(password, o.password)
        && equals(clientInfo, o.clientInfo);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = loginId != null ? loginId.hashCode() : 0;
      result = result * 37 + (password != null ? password.hashCode() : 0);
      result = result * 37 + (clientInfo != null ? clientInfo.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }
}
