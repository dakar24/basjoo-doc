// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Pledge.pb.h"

@implementation GetPledgeListRequest

- (instancetype) init {
  if ((self = [super init])) {
    _startIndex = 0;
    _userId = @"";
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStartIndex) {
    [output writeInt32:1 value:self.startIndex];
  }
  if (self.hasUserId) {
    [output writeString:2 value:self.userId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasStartIndex) {
    size_ += computeInt32Size(1, self.startIndex);
  }
  if (self.hasUserId) {
    size_ += computeStringSize(2, self.userId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GetPledgeListRequest*) parseFromData:(NSData*) data {
  GetPledgeListRequest* result = [[GetPledgeListRequest alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStartIndex) {
    [output appendFormat:@"%@%@: %@\n", indent, @"startIndex", [NSNumber numberWithInteger:self.startIndex]];
  }
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", self.userId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setStartIndex:(SInt32) value {
  _hasStartIndex = YES;
  _startIndex = value;
}
- (void) setUserId:(NSString*) value {
  _hasUserId = YES;
  _userId = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 8: {
        [self setStartIndex:[input readInt32]];
        break;
      }
      case 18: {
        [self setUserId:[input readString]];
        break;
      }
    }
  }
}
@end


@implementation GetPledgeListResult

- (instancetype) init {
  if ((self = [super init])) {
    _resultCode = @"";
    _resultMsg = @"";
    _maxIndex = 0;
    _hasMore = NO;
    _totalPledgeAmount = 0;
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResultCode) {
    [output writeString:1 value:self.resultCode];
  }
  if (self.hasResultMsg) {
    [output writeString:2 value:self.resultMsg];
  }
  if (self.hasMaxIndex) {
    [output writeInt32:3 value:self.maxIndex];
  }
  if (self.hasHasMore) {
    [output writeBool:4 value:self.hasMore];
  }
  if (self.hasTotalPledgeAmount) {
    [output writeDouble:5 value:self.totalPledgeAmount];
  }
  [self.pledgeLiteInfo enumerateObjectsUsingBlock:^(PledgeLiteInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:6 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasResultCode) {
    size_ += computeStringSize(1, self.resultCode);
  }
  if (self.hasResultMsg) {
    size_ += computeStringSize(2, self.resultMsg);
  }
  if (self.hasMaxIndex) {
    size_ += computeInt32Size(3, self.maxIndex);
  }
  if (self.hasHasMore) {
    size_ += computeBoolSize(4, self.hasMore);
  }
  if (self.hasTotalPledgeAmount) {
    size_ += computeDoubleSize(5, self.totalPledgeAmount);
  }
  [self.pledgeLiteInfo enumerateObjectsUsingBlock:^(PledgeLiteInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(6, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GetPledgeListResult*) parseFromData:(NSData*) data {
  GetPledgeListResult* result = [[GetPledgeListResult alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasResultCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultCode", self.resultCode];
  }
  if (self.hasResultMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultMsg", self.resultMsg];
  }
  if (self.hasMaxIndex) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxIndex", [NSNumber numberWithInteger:self.maxIndex]];
  }
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  if (self.hasTotalPledgeAmount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"totalPledgeAmount", [NSNumber numberWithDouble:self.totalPledgeAmount]];
  }
  [self.pledgeLiteInfo enumerateObjectsUsingBlock:^(PledgeLiteInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"pledgeLiteInfo"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setResultCode:(NSString*) value {
  _hasResultCode = YES;
  _resultCode = value;
}
- (void) setResultMsg:(NSString*) value {
  _hasResultMsg = YES;
  _resultMsg = value;
}
- (void) setMaxIndex:(SInt32) value {
  _hasMaxIndex = YES;
  _maxIndex = value;
}
- (void) setHasMore:(BOOL) value {
  _hasHasMore = YES;
  _hasMore = value;
}
- (void) setTotalPledgeAmount:(Float64) value {
  _hasTotalPledgeAmount = YES;
  _totalPledgeAmount = value;
}
- (void)setPledgeLiteInfoArray:(NSArray *)array {
  _pledgeLiteInfo = [[NSMutableArray alloc]initWithArray:array];
}
- (void)addPledgeLiteInfo:(PledgeLiteInfo*)value {
  if (_pledgeLiteInfo == nil) {
    _pledgeLiteInfo = [[NSMutableArray alloc]init];
  }
  [_pledgeLiteInfo addObject:value];
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self setResultCode:[input readString]];
        break;
      }
      case 18: {
        [self setResultMsg:[input readString]];
        break;
      }
      case 24: {
        [self setMaxIndex:[input readInt32]];
        break;
      }
      case 32: {
        [self setHasMore:[input readBool]];
        break;
      }
      case 41: {
        [self setTotalPledgeAmount:[input readDouble]];
        break;
      }
      case 50: {
        PledgeLiteInfo* sub = [[PledgeLiteInfo alloc] init];
        [input readQJMessage:sub extensionRegistry:extensionRegistry];
        [self addPledgeLiteInfo:sub];
        break;
      }
    }
  }
}
@end


@implementation PledgeLiteInfo

- (instancetype) init {
  if ((self = [super init])) {
    _orderId = @"";
    _imageUrl = @"";
    _desc = @"";
    _pledgePrice = 0;
    _endTime = 0L;
  }
  return self;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasOrderId) {
    [output writeString:1 value:self.orderId];
  }
  if (self.hasImageUrl) {
    [output writeString:2 value:self.imageUrl];
  }
  if (self.hasDesc) {
    [output writeString:3 value:self.desc];
  }
  if (self.hasPledgePrice) {
    [output writeDouble:4 value:self.pledgePrice];
  }
  if (self.hasEndTime) {
    [output writeInt64:5 value:self.endTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;

  size_ = 0;
  if (self.hasOrderId) {
    size_ += computeStringSize(1, self.orderId);
  }
  if (self.hasImageUrl) {
    size_ += computeStringSize(2, self.imageUrl);
  }
  if (self.hasDesc) {
    size_ += computeStringSize(3, self.desc);
  }
  if (self.hasPledgePrice) {
    size_ += computeDoubleSize(4, self.pledgePrice);
  }
  if (self.hasEndTime) {
    size_ += computeInt64Size(5, self.endTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PledgeLiteInfo*) parseFromData:(NSData*) data {
  PledgeLiteInfo* result = [[PledgeLiteInfo alloc] init];
  [result mergeFromData:data];  return result;
}
#ifdef DEBUG
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasOrderId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"orderId", self.orderId];
  }
  if (self.hasImageUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"imageUrl", self.imageUrl];
  }
  if (self.hasDesc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"desc", self.desc];
  }
  if (self.hasPledgePrice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pledgePrice", [NSNumber numberWithDouble:self.pledgePrice]];
  }
  if (self.hasEndTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"endTime", [NSNumber numberWithLongLong:self.endTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
#endif
- (void) setOrderId:(NSString*) value {
  _hasOrderId = YES;
  _orderId = value;
}
- (void) setImageUrl:(NSString*) value {
  _hasImageUrl = YES;
  _imageUrl = value;
}
- (void) setDesc:(NSString*) value {
  _hasDesc = YES;
  _desc = value;
}
- (void) setPledgePrice:(Float64) value {
  _hasPledgePrice = YES;
  _pledgePrice = value;
}
- (void) setEndTime:(SInt64) value {
  _hasEndTime = YES;
  _endTime = value;
}
- (void) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields_ = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields_ build]];
        return ;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields_ extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields_ build]];
          return ;
        }
        break;
      }
      case 10: {
        [self setOrderId:[input readString]];
        break;
      }
      case 18: {
        [self setImageUrl:[input readString]];
        break;
      }
      case 26: {
        [self setDesc:[input readString]];
        break;
      }
      case 33: {
        [self setPledgePrice:[input readDouble]];
        break;
      }
      case 40: {
        [self setEndTime:[input readInt64]];
        break;
      }
    }
  }
}
@end


